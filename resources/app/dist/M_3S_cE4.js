import{aK as y,aL as f,dg as T,eD as F,aN as c,eE as s}from"./0fV2q4Ox.js";const{request:p,newMsgId:m}=y(f.IPC_FLASH),R=864e5,u=new Map;function t(e,i,r,o,w=R){return(l=o,L=w)=>{const a=T(e,()=>F(e,[]));async function n(){return a.value=await i(),u.set(e,Date.now()),a.value}if((l??(u.get(e)??-1)<Date.now()-L)&&n(),a.update=n,r!==void 0)for(const[d,g]of Object.entries(r))a[d]=g(a.value);return a}}const D=t("products",async()=>{const{data:e}=await s.productList({productListRequest:{}});return e.products}),S=t("deploymentGroups",async()=>{const{data:e}=await s.firmwareDeploymentGroupList({firmwareDeploymentGroupListRequest:{}});return e.firmwareDeploymentGroups}),I=t("releaseTypes",async()=>{const{data:e}=await s.getFirmwareReleaseTypeList();return e.firmwareReleaseTypes}),M=t("firmwareFiles",async()=>{const{data:e}=await s.getFirmwareFileList({getFirmwareFileListRequest:{}});return e.firmwareFiles.reverse()}),v=t("firmwares",async()=>{const{data:e}=await s.firmwareList({firmwareListRequest:{}});return e.firmwares}),C=t("tags",async()=>{const{data:e}=await s.getTagList();return e.tags}),P=t("debugModes",async()=>{const{data:e}=await s.getDebugModeList();return e.debugModes}),E=t("programmerList",async()=>{try{const{devices:e}=await p({type:c.MICROCHIP_LIST_REQUEST,id:m()},16e3);return e}catch(e){return console.error("Error getting microchip list:",e),[]}}),_=t("comPorts",async()=>{const{ports:e}=await p({type:c.COM_PORT_LIST_REQUEST,id:m()});return e},{getBySerial:e=>i=>{var r;return((r=e.find(o=>o.serialNumber===i))==null?void 0:r.path)??""}});export{_ as a,S as b,M as c,I as d,v as e,E as f,P as g,C as h,D as u};
