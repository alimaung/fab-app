import{d as C,aJ as M,al as P,t as d,v as m,am as x,z as f,x as w,B as v,N as y,A as I,an as _,O as j,aa as D,eP as N,eQ as F,ar as V,c as z,r as U,bX as L,b as E,o as k,R,Q as $,y as q,ap as H}from"./0fV2q4Ox.js";import{D as G}from"./D0r5xylr.js";import{b as S,c as O}from"./BJaqhUnt.js";import{s as K}from"./BbFGwhBy.js";const J={key:0,class:"debug-period"},se=C({__name:"queryTimePeriod",props:{modelValue:{type:[Object]},modelModifiers:{}},emits:["update:modelValue"],setup(o){const s=M(o,"modelValue"),l=G();return(h,n)=>{const b=D,g=N,u=F,e=V,t=P("tooltip");return s.value?(d(),m("div",J,[x(f(b,{"aria-label":"Restrict to period",modelValue:s.value.restrictPeriod,"onUpdate:modelValue":n[0]||(n[0]=r=>s.value.restrictPeriod=r),style:{display:"inline-block",width:"unset","margin-right":"1ch"}},null,8,["modelValue"]),[[t,"Restrict to period"]]),w("span",{style:_(`opacity: ${s.value.restrictPeriod?1:.5}`)},[v(" From "),f(g,{datetime:`periodStart-${y(l)}`,class:"debug-datetime"},null,8,["datetime"]),v(" to "),f(g,{datetime:`periodEnd-${y(l)}`,class:"debug-datetime"},null,8,["datetime"]),f(e,{"keep-contents-mounted":!0},{default:I(()=>[f(u,{modelValue:s.value.periodStart,"onUpdate:modelValue":n[1]||(n[1]=r=>s.value.periodStart=r),locale:"en-DE",id:`periodStart-${y(l)}`},null,8,["modelValue","id"])]),_:1}),f(e,{"keep-contents-mounted":!0},{default:I(()=>[f(u,{modelValue:s.value.periodEnd,"onUpdate:modelValue":n[2]||(n[2]=r=>s.value.periodEnd=r),locale:"en-DE",id:`periodEnd-${y(l)}`},null,8,["modelValue","id"])]),_:1})],4)])):j("",!0)}}});var T={openapi:"3.0.0",info:{title:"Solarnative Fabrication API",version:"1.10"},servers:[{url:"https://fab.solarnative.cloud/v1"}],paths:{"/debug/gateway/data":{options:{operationId:"debugGatewayDataOptions",responses:{200:{$ref:"#/components/responses/DefaultOptionsResponse"}},"x-amazon-apigateway-integration":{type:"mock",requestTemplates:{"application/json":`{"statusCode" : 200}
`},responses:{default:{statusCode:200,responseParameters:{"method.response.header.Access-Control-Allow-Headers":"'*'","method.response.header.Access-Control-Allow-Methods":"'OPTIONS'","method.response.header.Access-Control-Allow-Origin":"'*'"}}}}},post:{summary:"Obtain debug information for a gateway.",operationId:"debugGatewayData",security:[{sigV4:[]}],"x-amazon-apigateway-integration":{uri:"arn:aws:apigateway:eu-central-1:lambda:path/2015-03-31/functions/arn:aws:lambda:eu-central-1:217109539042:function:fab_v1/invocations",httpMethod:"POST",type:"aws_proxy",passthroughBehavior:"when_no_match"},requestBody:{description:'Filter criteria for gateway identifiers. Identifier values for identifier types "ProductSerial", "ProductSerialId", "DataMatrixCode" are always unique. The identifier type "SerialNumber" requires the parameter "productCode" specified. At least one filter parameter is required.',required:!0,content:{"application/json":{schema:{allOf:[{type:"object",properties:{identifierType:{description:"The type of identifier for the device.",type:"string",enum:["ProductSerial","ProductSerialId","DataMatrixCode","DeviceHash","SerialNumber"],example:"SerialNumber"},identifierValue:{description:"Identifier value of the type as specified in parameter identifierType.",type:"string",example:"88801"},productCode:{description:'Product code of the device. This parameter is required if identifierType "SerialNumber" is specified.',type:"integer",format:"int32",example:2},periodStart:{description:"Start of the time period in milliseconds since epoch to filter the result set. Data must be newer or exactly from the time stamp specified.",type:"integer",format:"int64",example:1710684112e3},periodEnd:{description:"End of the time period in milliseconds since epoch to filter the result set. Data must be older than the time stamp specified.",type:"integer",format:"int64",example:1710684187e3}},required:["identifierType","identifierValue"]},{$ref:"#/components/schemas/RequestCursorPagination"}]}}}},responses:{200:{description:"OK response.",content:{"application/json":{schema:{allOf:[{$ref:"#/components/schemas/ResponseBase"},{type:"object",properties:{data:{type:"object",properties:{timestamp:{type:"array",items:{type:"integer",format:"int64"},description:"Adjusted timestamp in milliseconds since epoch aligned to the full minute."},inverterExport:{type:"array",items:{type:"number",format:"double"},description:"The amount of energy in Wh that has been exported, i.e. generated, by the inverters of this gateway."},uptime:{type:"array",items:{type:"integer",format:"int64"},description:"Runtime of the gateway in microseconds since the latest reboot."},temp:{type:"array",items:{type:"number",format:"double"},description:"Temperature of the gateway in celsius."},firmwareHash:{type:"array",items:{type:"integer",format:"int64"},description:"Hash value of the gateway application."},ram:{type:"array",items:{type:"integer",format:"int32"},description:"Free memory in bytes."},reboot:{type:"array",items:{type:"integer",format:"int32"},description:"Reason for the latest reboot. 1=UNKNOWN, 2=POWERON, 3=EXT(ernal pin) 4=SW (software), 5=PANIC, 6=INT_WDT (interrupt watchdog), 7=TASK_WDT (task watchdog), 8=WDT (other watchdogs), 9=DEEPSLEEP, 10=BROWNOUT, 11=SDIO, 12=USB (usb peripheral), 13=JTAG"},ssid:{type:"array",items:{type:"string"},description:"SSID of the wifi to which the gateway is connected."},bssid:{type:"array",items:{type:"string"},description:"BSSID of the wifi to which the gateway is connected."},rssi:{type:"array",items:{type:"number",format:"double"},description:"RSSI of the wifi to which the gateway is connected."},ip:{type:"array",items:{type:"string"},description:"Local IP of the gateway."},subnet:{type:"array",items:{type:"string"},description:"Local IP subnet mask of the gateway."},gateway:{type:"array",items:{type:"string"},description:"Local IP gateway address of the gateway."}},required:["timestamp","inverterExport"]}},required:["data"]},{$ref:"#/components/schemas/ResponseCursorPagination"}]}}}},400:{$ref:"#/components/responses/ErrorResponseBadRequest"},401:{$ref:"#/components/responses/ErrorResponseUnauthorized"},403:{$ref:"#/components/responses/ErrorResponseForbidden"},408:{$ref:"#/components/responses/ErrorResponseRequestTimeout"},413:{$ref:"#/components/responses/ErrorResponsePayloadTooLarge"},429:{$ref:"#/components/responses/ErrorResponseTooManyRequests"},500:{$ref:"#/components/responses/ErrorResponseInternalServerError"},503:{$ref:"#/components/responses/ErrorResponseServiceUnavailable"}}}},"/debug/inverter/data":{options:{operationId:"debugInverterDataOptions",responses:{200:{$ref:"#/components/responses/DefaultOptionsResponse"}},"x-amazon-apigateway-integration":{type:"mock",requestTemplates:{"application/json":`{"statusCode" : 200}
`},responses:{default:{statusCode:200,responseParameters:{"method.response.header.Access-Control-Allow-Headers":"'*'","method.response.header.Access-Control-Allow-Methods":"'OPTIONS'","method.response.header.Access-Control-Allow-Origin":"'*'"}}}}},post:{summary:"Obtain debug information for an inverter.",operationId:"debugInverterData",security:[{sigV4:[]}],"x-amazon-apigateway-integration":{uri:"arn:aws:apigateway:eu-central-1:lambda:path/2015-03-31/functions/arn:aws:lambda:eu-central-1:217109539042:function:fab_v1/invocations",httpMethod:"POST",type:"aws_proxy",passthroughBehavior:"when_no_match"},requestBody:{description:'Filter criteria for inverter identifiers. Identifier values for identifier types "ProductSerial", "ProductSerialId", "DataMatrixCode" are always unique. The identifier type "SerialNumber" requires the parameter "productCode" specified. At least one filter parameter is required.',required:!0,content:{"application/json":{schema:{allOf:[{type:"object",properties:{identifierType:{description:"The type of identifier for the device.",type:"string",enum:["ProductSerial","ProductSerialId","DataMatrixCode","DeviceHash","SerialNumber"],example:"SerialNumber"},identifierValue:{description:"Identifier value of the type as specified in parameter identifierType.",type:"string",example:"88801"},productCode:{description:'Product code of the device. This parameter is required if identifierType "SerialNumber" is specified.',type:"integer",format:"int32",example:2},periodStart:{description:"Start of the time period in milliseconds since epoch to filter the result set. Data must be newer or exactly from the time stamp specified.",type:"integer",format:"int64",example:1710684111e3},periodEnd:{description:"End of the time period in milliseconds since epoch to filter the result set. Data must be older than the time stamp specified.",type:"integer",format:"int64",example:1710684186e3}},required:["identifierType","identifierValue"]},{$ref:"#/components/schemas/RequestCursorPagination"}]}}}},responses:{200:{description:"OK response.",content:{"application/json":{schema:{allOf:[{$ref:"#/components/schemas/ResponseBase"},{type:"object",properties:{data:{type:"object",properties:{timestamp:{type:"array",items:{type:"integer",format:"int64"},description:"Adjusted timestamp in milliseconds since epoch aligned to the full minute."},runtime:{type:"array",items:{type:"integer",format:"int32"},description:'Vendor-specific inverter runtime in microseconds since bootup. JSON message inverter attribute "ITimestamp".'},w:{type:"array",items:{type:"number",format:"double"},description:'Vendor-specific latest power that the inverter has generated in Watt (W). JSON message inverter attribute "W".'},whruntime:{type:"array",items:{type:"number",format:"double"},description:'Vendor-specific inverter energy generated in watt hours since bootup. JSON message inverter attribute "WH".'},dca:{type:"array",items:{type:"number",format:"double"},description:'Vendor-specific inverter DC Current (A) being sum of string behind this inverter. JSON message inverter attribute "DCA".'},dcv:{type:"array",items:{type:"number",format:"double"},description:'Vendor-specific DC Voltage input PV (V). JSON message inverter attribute "DCV".'},fgrid:{type:"array",items:{type:"number",format:"double"},description:'Vendor-specific grid frequency. JSON message inverter attribute "IFgrid".'},iline:{type:"array",items:{type:"number",format:"double"},description:'JSON message inverter attribute "IIline". Sunspec attribute "A".'},tramp:{type:"array",items:{type:"integer",format:"int32"},description:'Rampup time in milliseconds. JSON message inverter attribute "ITramp". Sunspec attribute "TRampup".'},vbias:{type:"array",items:{type:"number",format:"double"},description:'JSON message inverter attribute "IVbias". Sunspec attribute "Vbias".'},vref:{type:"array",items:{type:"number",format:"double"},description:'JSON message inverter attribute "IVref". Sunspec attribute "Vref".'},phvpha:{type:"array",items:{type:"number",format:"double"},description:'Vendor-specific phase voltage AN (V). JSON message inverter attribute "PhVphA".'},spare1:{type:"array",items:{type:"integer",format:"int32"},description:'JSON message inverter attribute "Spare1". Sunspec attribute "Spare1".'},spare2:{type:"array",items:{type:"integer",format:"int32"},description:'JSON message inverter attribute "Spare2". Sunspec attribute "Spare2".'},trecl:{type:"array",items:{type:"number",format:"double"},description:'Reclosure time. JSON message inverter attribute "TRecl". Sunspec attribute "TRecl".'},tmpot:{type:"array",items:{type:"number",format:"double"},description:'Vendor-specific temperature of micro processor in kelvin. JSON message inverter attribute "TmpOt".'},status:{type:"array",items:{type:"integer",format:"int32"},description:'Vendor-specific status bit vector. JSON message inverter attribute "IStatus". Sunspec attribute "StVnd".'}},required:["timestamp","w","whruntime"]}},required:["data"]},{$ref:"#/components/schemas/ResponseCursorPagination"}]}}}},400:{$ref:"#/components/responses/ErrorResponseBadRequest"},401:{$ref:"#/components/responses/ErrorResponseUnauthorized"},403:{$ref:"#/components/responses/ErrorResponseForbidden"},408:{$ref:"#/components/responses/ErrorResponseRequestTimeout"},413:{$ref:"#/components/responses/ErrorResponsePayloadTooLarge"},429:{$ref:"#/components/responses/ErrorResponseTooManyRequests"},500:{$ref:"#/components/responses/ErrorResponseInternalServerError"},503:{$ref:"#/components/responses/ErrorResponseServiceUnavailable"}}}},"/debug/mode/list":{options:{operationId:"getDebugModeListOptions",responses:{200:{$ref:"#/components/responses/DefaultOptionsResponse"}},"x-amazon-apigateway-integration":{type:"mock",requestTemplates:{"application/json":`{"statusCode" : 200}
`},responses:{default:{statusCode:200,responseParameters:{"method.response.header.Access-Control-Allow-Headers":"'*'","method.response.header.Access-Control-Allow-Methods":"'OPTIONS'","method.response.header.Access-Control-Allow-Origin":"'*'"}}}}},post:{summary:"Get a list of debug modes.",operationId:"getDebugModeList",security:[{sigV4:[]}],"x-amazon-apigateway-integration":{uri:"arn:aws:apigateway:eu-central-1:lambda:path/2015-03-31/functions/arn:aws:lambda:eu-central-1:217109539042:function:fab_v1/invocations",httpMethod:"POST",type:"aws_proxy",passthroughBehavior:"when_no_match"},responses:{200:{description:"OK response.",content:{"application/json":{schema:{allOf:[{$ref:"#/components/schemas/ResponseBase"},{type:"object",properties:{data:{type:"object",properties:{debugModes:{type:"array",items:{type:"object",properties:{id:{type:"integer",format:"int32",description:"Identifier of the debug mode.",example:2},name:{type:"string",description:"Name of the debug mode.",example:"cloudwatch json"},description:{type:"string",description:"Description of the debug mode.",example:"Writes json serialized messages related to the device into the cloudwatch stream."},productTypes:{type:"array",items:{type:"object",properties:{id:{type:"integer",format:"int32",description:"Identifier of the type of the product.",example:1},name:{type:"string",description:"Name of the product type.",example:"gateway"}}},description:"List of product types of the devices for which the debug mode may be set."}},required:["id","name","productTypes"]},description:"List of debug available debug modes."}},required:["debugModes"]}},required:["data"]}]}}}},400:{$ref:"#/components/responses/ErrorResponseBadRequest"},401:{$ref:"#/components/responses/ErrorResponseUnauthorized"},403:{$ref:"#/components/responses/ErrorResponseForbidden"},408:{$ref:"#/components/responses/ErrorResponseRequestTimeout"},413:{$ref:"#/components/responses/ErrorResponsePayloadTooLarge"},429:{$ref:"#/components/responses/ErrorResponseTooManyRequests"},500:{$ref:"#/components/responses/ErrorResponseInternalServerError"},503:{$ref:"#/components/responses/ErrorResponseServiceUnavailable"}}}},"/device/create":{options:{operationId:"createDeviceOptions",responses:{200:{$ref:"#/components/responses/DefaultOptionsResponse"}},"x-amazon-apigateway-integration":{type:"mock",requestTemplates:{"application/json":`{"statusCode" : 200}
`},responses:{default:{statusCode:200,responseParameters:{"method.response.header.Access-Control-Allow-Headers":"'*'","method.response.header.Access-Control-Allow-Methods":"'OPTIONS'","method.response.header.Access-Control-Allow-Origin":"'*'"}}}}},post:{summary:"Create a single device or a batch of devices.",operationId:"createDevice",security:[{sigV4:[]}],"x-amazon-apigateway-integration":{uri:"arn:aws:apigateway:eu-central-1:lambda:path/2015-03-31/functions/arn:aws:lambda:eu-central-1:217109539042:function:fab_v1/invocations",httpMethod:"POST",type:"aws_proxy",passthroughBehavior:"when_no_match"},requestBody:{description:"Parameters for device creation.",required:!0,content:{"application/json":{schema:{type:"object",properties:{productVariantId:{type:"integer",format:"int32",description:"Identifier of a product variant for which to create the devices. Either provide this parameter or provide `erpMaterialNumber`.",example:2},erpMaterialNumber:{type:"string",description:"Material number as per the ERP. Either provide this parameter or provide `productVariantId`.",example:"100543-00"},dataMatrixCode:{type:"string",description:"Data Matrix Code; Foreign identifier for a device PCB to be registered for a device. The value for parameter `limit` must be 1 if this parameter is specified.",example:"INV-350-00000371"},limit:{description:"Number of devices to create. Parameter `dataMatrixCode` must not be specified if this parameter is set to a value other than 1.",type:"integer",format:"int32",default:1},remarks:{description:"Remarks to set for the created devices.",type:"string",default:null},tagIds:{type:"array",items:{type:"number",format:"int32"},description:"Complete set of tag identifiers the device(s) are to be assigned to. See endpoint `/tag/list` for valid values.",example:[1]}}}}}},responses:{200:{description:"OK response.",content:{"application/json":{schema:{allOf:[{$ref:"#/components/schemas/ResponseBase"},{type:"object",properties:{data:{type:"object",properties:{deviceIdentifiers:{type:"array",items:{type:"object",properties:{productCode:{$ref:"#/components/schemas/ProductCode"},serialNumber:{$ref:"#/components/schemas/SerialNumber"},productSerial:{$ref:"#/components/schemas/ProductSerial"},productSerialId:{$ref:"#/components/schemas/ProductSerialId"}},required:["productCode","serialNumber","productSerial","productSerialId"]}}},required:["deviceIdentifiers"]}},required:["data"]}]}}}},400:{$ref:"#/components/responses/ErrorResponseBadRequest"},401:{$ref:"#/components/responses/ErrorResponseUnauthorized"},403:{$ref:"#/components/responses/ErrorResponseForbidden"},408:{$ref:"#/components/responses/ErrorResponseRequestTimeout"},413:{$ref:"#/components/responses/ErrorResponsePayloadTooLarge"},429:{$ref:"#/components/responses/ErrorResponseTooManyRequests"},500:{$ref:"#/components/responses/ErrorResponseInternalServerError"},503:{$ref:"#/components/responses/ErrorResponseServiceUnavailable"}}}},"/device/list":{options:{operationId:"deviceListOptions",responses:{200:{$ref:"#/components/responses/DefaultOptionsResponse"}},"x-amazon-apigateway-integration":{type:"mock",requestTemplates:{"application/json":`{"statusCode" : 200}
`},responses:{default:{statusCode:200,responseParameters:{"method.response.header.Access-Control-Allow-Headers":"'*'","method.response.header.Access-Control-Allow-Methods":"'OPTIONS'","method.response.header.Access-Control-Allow-Origin":"'*'"}}}}},post:{summary:"Obtain a list of details of devices.",operationId:"deviceList",security:[{sigV4:[]}],"x-amazon-apigateway-integration":{uri:"arn:aws:apigateway:eu-central-1:lambda:path/2015-03-31/functions/arn:aws:lambda:eu-central-1:217109539042:function:fab_v1/invocations",httpMethod:"POST",type:"aws_proxy",passthroughBehavior:"when_no_match"},requestBody:{description:'Filter criteria for devices. Identifier values for identifier types "ProductSerial", "ProductSerialId", "DataMatrixCode" are always unique. The identifier type "SerialNumber" requires the parameter "productCode" specified.',required:!0,content:{"application/json":{schema:{type:"object",properties:{identifierType:{description:"The type of identifier for the device.",type:"string",enum:["ProductSerial","ProductSerialId","DataMatrixCode","DeviceHash","SerialNumber"],example:"SerialNumber"},identifierValues:{description:"Identifier values of the type as specified in parameter identifierType.",type:"array",items:{type:"string"},example:["88801"]},productCode:{description:'Product code of the device. This parameter is required only for identifierType "SerialNumber".',type:"integer",format:"int32",example:2}},required:["identifierType","identifierValues"]}}}},responses:{200:{description:"OK response.",content:{"application/json":{schema:{allOf:[{$ref:"#/components/schemas/ResponseBase"},{type:"object",properties:{data:{type:"object",properties:{devices:{type:"array",items:{type:"object",properties:{productSerial:{$ref:"#/components/schemas/ProductSerial"},productSerialId:{$ref:"#/components/schemas/ProductSerialId"},serialNumber:{$ref:"#/components/schemas/SerialNumber"},dataMatrixCode:{$ref:"#/components/schemas/DataMatrixCode"},deviceHash:{$ref:"#/components/schemas/DeviceHash"},encryptionKey:{type:"string",description:"Encryption key of the device for communication.",example:"125b83f25c122ba412fdc425b"},product:{description:"Product details",allOf:[{$ref:"#/components/schemas/Product"},{type:"object",properties:{type:{$ref:"#/components/schemas/ProductType"},variant:{$ref:"#/components/schemas/ProductVariant"}},required:["type","variant"]}]},status:{allOf:[{$ref:"#/components/schemas/DeviceStatus"},{type:"object",properties:{contactTimeStamp:{type:"string",format:"date-time",example:"2023-11-22T20:22:15Z",description:"Date and time of the latest contact of this device as ISO 8601 formatted string."},isProvisioned:{type:"boolean",example:!0,description:"True if this device has been assigned to a plant."}}}]},debugModes:{type:"array",items:{type:"object",properties:{id:{type:"integer",format:"int32",description:"Identifier of the debug mode.",example:2},name:{type:"string",description:"Name of the debug mode.",example:"cloudwatch json"}},required:["id","name"]},description:"List of debug modes set on the device. See endpoint `/debug/mode` for a list of possible values."},firmware:{type:"object",properties:{id:{type:"integer",format:"int32",description:"Identifier of the firmware on the device",example:1},name:{type:"string",description:"Name of the firmware on the device",example:"Inverter 350 firmware"},release:{type:"object",properties:{id:{type:"integer",format:"int32",description:"Identifier of the firmware release.",example:1},tag:{type:"string",description:"Tag of the firmware release.",example:"v1"}},required:["id","tag"]},deploymentGroup:{type:"object",properties:{id:{type:"integer",format:"int32",description:"Identifier of the firmware deployment group.",example:1},name:{type:"string",description:"Name of the firmware deployment group.",example:"Hofheim test plant inverter group."}},required:["id","name"]}},required:["deploymentGroup"]},additionalAttributes:{oneOf:[{$ref:"#/components/schemas/MicroGatewayAttributes"}]},remarks:{type:"string",description:"Free text for remarks on a device.",example:"Inverter test series for container."},creationTimeStamp:{type:"string",format:"date-time",description:"Timestamp of the device creation as ISO 8601 formatted string.",example:"2023-09-05T15:30:21Z"},productionTimeStamp:{type:"string",format:"date-time",description:"Timestamp of the device production as ISO 8601 formatted string.",example:"2023-09-05T16:14:01Z"},tags:{type:"array",items:{$ref:"#/components/schemas/Tag"},description:"Set of tags. See endpoint `/tag/list` for possible values.",example:[{id:1,name:"DEVELOPMENT"}]}},required:["productSerialId","productSerial","serialNumber","status","product","tags","firmware"]}}},required:["devices"]}},required:["data"]}]}}}},400:{$ref:"#/components/responses/ErrorResponseBadRequest"},401:{$ref:"#/components/responses/ErrorResponseUnauthorized"},403:{$ref:"#/components/responses/ErrorResponseForbidden"},408:{$ref:"#/components/responses/ErrorResponseRequestTimeout"},413:{$ref:"#/components/responses/ErrorResponsePayloadTooLarge"},429:{$ref:"#/components/responses/ErrorResponseTooManyRequests"},500:{$ref:"#/components/responses/ErrorResponseInternalServerError"},503:{$ref:"#/components/responses/ErrorResponseServiceUnavailable"}}}},"/device/modify":{options:{operationId:"modifyDeviceOptions",responses:{200:{$ref:"#/components/responses/DefaultOptionsResponse"}},"x-amazon-apigateway-integration":{type:"mock",requestTemplates:{"application/json":`{"statusCode" : 200}
`},responses:{default:{statusCode:200,responseParameters:{"method.response.header.Access-Control-Allow-Headers":"'*'","method.response.header.Access-Control-Allow-Methods":"'OPTIONS'","method.response.header.Access-Control-Allow-Origin":"'*'"}}}}},post:{summary:"Modify details of a device.",operationId:"modifyDevice",security:[{sigV4:[]}],"x-amazon-apigateway-integration":{uri:"arn:aws:apigateway:eu-central-1:lambda:path/2015-03-31/functions/arn:aws:lambda:eu-central-1:217109539042:function:fab_v1/invocations",httpMethod:"POST",type:"aws_proxy",passthroughBehavior:"when_no_match"},requestBody:{description:"Parameters for modification of the device.",required:!0,content:{"application/json":{schema:{type:"object",properties:{productSerial:{type:"string",description:"The unique identifier of the device composed of the product code and serial number represented and serialized as string.",example:"00000300002T5M"},dataMatrixCode:{type:"string",description:"Data Matrix Code; Foreign identifier for a device PCB to be registered for a device. This parameter may only be specified if the data matrix code has not been set previously.",example:"INV-350-00000371"},deviceStatusId:{type:"number",format:"int32",description:"Identifier of a device status. See endpoint `/device/status/list` for valid values.",example:3},deviceFirmwareKey:{type:"string",description:"Device-specific firmware encryption key represented as base64 encoded string.",example:"dG9sbGVzIEJlaXNwaWVsCg=="},firmwareReleaseId:{type:"number",format:"int32",description:"Identifier of a firmware release. See endpoint `/firmware/release/list` for valid values.",example:3},remarks:{type:"string",description:"Remarks for the device."},tagIds:{type:"array",items:{type:"number",format:"int32"},description:"Complete set of tag identifiers the device(s) are to be assigned to. See endpoint `/tag/list` for valid values.",example:[1]},debugModeIds:{type:"array",items:{type:"number",format:"int32"},description:"Complete set of debug mode identifiers to be set on the device. See endpoint `/debug/mode/list` for valid values.",example:[1]}},required:["productSerial"]}}}},responses:{200:{description:"OK response.",content:{"application/json":{schema:{$ref:"#/components/schemas/ResponseBase"}}}},400:{$ref:"#/components/responses/ErrorResponseBadRequest"},401:{$ref:"#/components/responses/ErrorResponseUnauthorized"},403:{$ref:"#/components/responses/ErrorResponseForbidden"},408:{$ref:"#/components/responses/ErrorResponseRequestTimeout"},413:{$ref:"#/components/responses/ErrorResponsePayloadTooLarge"},429:{$ref:"#/components/responses/ErrorResponseTooManyRequests"},500:{$ref:"#/components/responses/ErrorResponseInternalServerError"},503:{$ref:"#/components/responses/ErrorResponseServiceUnavailable"}}}},"/device/identifier/list":{options:{operationId:"deviceIdentifierListOptions",responses:{200:{$ref:"#/components/responses/DefaultOptionsResponse"}},"x-amazon-apigateway-integration":{type:"mock",requestTemplates:{"application/json":`{"statusCode" : 200}
`},responses:{default:{statusCode:200,responseParameters:{"method.response.header.Access-Control-Allow-Headers":"'*'","method.response.header.Access-Control-Allow-Methods":"'OPTIONS'","method.response.header.Access-Control-Allow-Origin":"'*'"}}}}},post:{summary:"Obtain a list of device identifiers.",operationId:"deviceIdentifierList",security:[{sigV4:[]}],"x-amazon-apigateway-integration":{uri:"arn:aws:apigateway:eu-central-1:lambda:path/2015-03-31/functions/arn:aws:lambda:eu-central-1:217109539042:function:fab_v1/invocations",httpMethod:"POST",type:"aws_proxy",passthroughBehavior:"when_no_match"},requestBody:{description:'Filter criteria for device identifiers. Identifier values for identifier types "ProductSerial", "ProductSerialId", "DataMatrixCode" are always unique. The identifier type "SerialNumber" requires the parameter "productCode" specified. At least one filter parameter is required.',required:!0,content:{"application/json":{schema:{allOf:[{type:"object",properties:{identifierType:{description:"The type of identifier for the device.",type:"string",enum:["ProductSerial","ProductSerialId","DataMatrixCode","DeviceHash","SerialNumber"],example:"SerialNumber"},identifierValues:{description:"Identifier values of the type as specified in parameter identifierType.",type:"array",items:{type:"string"},example:["88801"]},productCode:{description:'Product code of the device. This parameter is required if identifierType "SerialNumber" is specified.',type:"integer",format:"int32",example:2},firmwareDeploymentGroupIds:{type:"array",items:{type:"integer",format:"int32",description:"Set of identifiers of firmware deployment groups the device(s) are assigned to. See endpoint `/firmware/deploymentGroup/list` for valid values."}},tagIds:{type:"array",items:{type:"number",format:"int32"},description:"Set of tag identifiers the device(s) are assigned to. See endpoint `/tag/list` for valid values.",example:[1]}}},{$ref:"#/components/schemas/RequestCursorPagination"}]}}}},responses:{200:{description:"OK response.",content:{"application/json":{schema:{allOf:[{$ref:"#/components/schemas/ResponseBase"},{type:"object",properties:{data:{type:"object",properties:{devices:{type:"array",items:{type:"object",properties:{productSerial:{$ref:"#/components/schemas/ProductSerial"},productSerialId:{$ref:"#/components/schemas/ProductSerialId"},productCode:{$ref:"#/components/schemas/ProductCode"},serialNumber:{$ref:"#/components/schemas/SerialNumber"},dataMatrixCode:{$ref:"#/components/schemas/DataMatrixCode"},deviceHash:{$ref:"#/components/schemas/DeviceHash"}},required:["productSerial","productSerialId","productCode","serialNumber","dataMatrixCode","deviceHash"]}}},required:["devices"]}},required:["data"]},{$ref:"#/components/schemas/ResponseCursorPagination"}]}}}},400:{$ref:"#/components/responses/ErrorResponseBadRequest"},401:{$ref:"#/components/responses/ErrorResponseUnauthorized"},403:{$ref:"#/components/responses/ErrorResponseForbidden"},408:{$ref:"#/components/responses/ErrorResponseRequestTimeout"},413:{$ref:"#/components/responses/ErrorResponsePayloadTooLarge"},429:{$ref:"#/components/responses/ErrorResponseTooManyRequests"},500:{$ref:"#/components/responses/ErrorResponseInternalServerError"},503:{$ref:"#/components/responses/ErrorResponseServiceUnavailable"}}}},"/device/identifier/setDataMatrixCode":{options:{operationId:"setDataMatrixCodeOptions",responses:{200:{$ref:"#/components/responses/DefaultOptionsResponse"}},"x-amazon-apigateway-integration":{type:"mock",requestTemplates:{"application/json":`{"statusCode" : 200}
`},responses:{default:{statusCode:200,responseParameters:{"method.response.header.Access-Control-Allow-Headers":"'*'","method.response.header.Access-Control-Allow-Methods":"'OPTIONS'","method.response.header.Access-Control-Allow-Origin":"'*'"}}}}},post:{summary:"Map 3rd party identifiers for devices",operationId:"setDataMatrixCode",security:[{sigV4:[]}],"x-amazon-apigateway-integration":{uri:"arn:aws:apigateway:eu-central-1:lambda:path/2015-03-31/functions/arn:aws:lambda:eu-central-1:217109539042:function:fab_v1/invocations",httpMethod:"POST",type:"aws_proxy",passthroughBehavior:"when_no_match"},requestBody:{description:'Identifier mappings. The endpoint allows to set the 3rd party identifier "Data Matrix Code" for a device identified by its "Product Serial Id".',required:!0,content:{"application/json":{schema:{type:"object",properties:{identifiers:{type:"array",description:"Mappings from Product Serial Id to the Data Matrix Code per device.",items:{type:"object",properties:{productSerialId:{$ref:"#/components/schemas/ProductSerialId"},dataMatrixCode:{$ref:"#/components/schemas/DataMatrixCode"}}}}}}}}},responses:{200:{description:"OK response.",content:{"application/json":{schema:{$ref:"#/components/schemas/ResponseBase"}}}}}}},"/device/status/list":{options:{operationId:"getDeviceStatusListOptions",responses:{200:{$ref:"#/components/responses/DefaultOptionsResponse"}},"x-amazon-apigateway-integration":{type:"mock",requestTemplates:{"application/json":`{"statusCode" : 200}
`},responses:{default:{statusCode:200,responseParameters:{"method.response.header.Access-Control-Allow-Headers":"'*'","method.response.header.Access-Control-Allow-Methods":"'OPTIONS'","method.response.header.Access-Control-Allow-Origin":"'*'"}}}}},post:{summary:"Obtain a list of of device status.",operationId:"getDeviceStatusList",security:[{sigV4:[]}],"x-amazon-apigateway-integration":{uri:"arn:aws:apigateway:eu-central-1:lambda:path/2015-03-31/functions/arn:aws:lambda:eu-central-1:217109539042:function:fab_v1/invocations",httpMethod:"POST",type:"aws_proxy",passthroughBehavior:"when_no_match"},requestBody:{description:"Filter criteria for the device status the list.",required:!0,content:{"application/json":{schema:{type:"object",properties:{deviceStatusId:{description:"Identifier of a device status.",type:"integer",example:3}}}}}},responses:{200:{description:"OK response.",content:{"application/json":{schema:{allOf:[{$ref:"#/components/schemas/ResponseBase"},{type:"object",properties:{data:{type:"object",properties:{deviceStatus:{type:"array",items:{allOf:[{$ref:"#/components/schemas/DeviceStatus"},{type:"object",properties:{description:{type:"string",description:"Description of the device status.",example:"The device has been tested and is operable."}}}]}}},required:["devicesStatus"]}},required:["data"]}]}}}},400:{$ref:"#/components/responses/ErrorResponseBadRequest"},401:{$ref:"#/components/responses/ErrorResponseUnauthorized"},403:{$ref:"#/components/responses/ErrorResponseForbidden"},408:{$ref:"#/components/responses/ErrorResponseRequestTimeout"},413:{$ref:"#/components/responses/ErrorResponsePayloadTooLarge"},429:{$ref:"#/components/responses/ErrorResponseTooManyRequests"},500:{$ref:"#/components/responses/ErrorResponseInternalServerError"},503:{$ref:"#/components/responses/ErrorResponseServiceUnavailable"}}}},"/firmware/create":{options:{operationId:"createFirmwareOptions",responses:{200:{$ref:"#/components/responses/DefaultOptionsResponse"}},"x-amazon-apigateway-integration":{type:"mock",requestTemplates:{"application/json":`{"statusCode" : 200}
`},responses:{default:{statusCode:200,responseParameters:{"method.response.header.Access-Control-Allow-Headers":"'*'","method.response.header.Access-Control-Allow-Methods":"'OPTIONS'","method.response.header.Access-Control-Allow-Origin":"'*'"}}}}},post:{summary:"Create a firmware for a product.",operationId:"createFirmware",security:[{sigV4:[]}],"x-amazon-apigateway-integration":{uri:"arn:aws:apigateway:eu-central-1:lambda:path/2015-03-31/functions/arn:aws:lambda:eu-central-1:217109539042:function:fab_v1/invocations",httpMethod:"POST",type:"aws_proxy",passthroughBehavior:"when_no_match"},requestBody:{description:"Create a firmware for a product.",required:!0,content:{"application/json":{schema:{type:"object",properties:{productId:{type:"number",format:"int32",description:"Identifier of the product. See endpoint `/product/list` for valid values.",example:1},name:{type:"string",description:"Name of the firmware."},description:{type:"string",description:"Description of the firmware."},fileTypeIds:{type:"array",items:{type:"number",format:"int32",description:"Identifier of types of files that this firmware comprises. See endpoint `/firmware/fileType/list` for valid values."}}},required:["productId","name","description","fileTypeIds"]}}}},responses:{200:{description:"OK response.",content:{"application/json":{schema:{allOf:[{$ref:"#/components/schemas/ResponseBase"},{type:"object",properties:{data:{type:"object",properties:{firmware:{type:"object",properties:{id:{type:"number",format:"int32",description:"Identifier of the firmware.",example:1}},required:["id"]}},required:["firmware"]}},required:["data"]}]}}}},400:{$ref:"#/components/responses/ErrorResponseBadRequest"},401:{$ref:"#/components/responses/ErrorResponseUnauthorized"},403:{$ref:"#/components/responses/ErrorResponseForbidden"},408:{$ref:"#/components/responses/ErrorResponseRequestTimeout"},413:{$ref:"#/components/responses/ErrorResponsePayloadTooLarge"},429:{$ref:"#/components/responses/ErrorResponseTooManyRequests"},500:{$ref:"#/components/responses/ErrorResponseInternalServerError"},503:{$ref:"#/components/responses/ErrorResponseServiceUnavailable"}}}},"/firmware/list":{options:{operationId:"firmwareListOptions",responses:{200:{$ref:"#/components/responses/DefaultOptionsResponse"}},"x-amazon-apigateway-integration":{type:"mock",requestTemplates:{"application/json":`{"statusCode" : 200}
`},responses:{default:{statusCode:200,responseParameters:{"method.response.header.Access-Control-Allow-Headers":"'*'","method.response.header.Access-Control-Allow-Methods":"'OPTIONS'","method.response.header.Access-Control-Allow-Origin":"'*'"}}}}},post:{summary:"Get the list of firmwares and their releases.",operationId:"firmwareList",security:[{sigV4:[]}],"x-amazon-apigateway-integration":{uri:"arn:aws:apigateway:eu-central-1:lambda:path/2015-03-31/functions/arn:aws:lambda:eu-central-1:217109539042:function:fab_v1/invocations",httpMethod:"POST",type:"aws_proxy",passthroughBehavior:"when_no_match"},requestBody:{description:"Parameters for filters on the firmware list.",required:!0,content:{"application/json":{schema:{type:"object",properties:{firmwareId:{type:"integer",format:"int32",description:"Identifier of a firmware for which to filter."}}}}}},responses:{200:{description:"OK response.",content:{"application/json":{schema:{allOf:[{$ref:"#/components/schemas/ResponseBase"},{type:"object",properties:{data:{type:"object",properties:{firmwares:{type:"array",items:{$ref:"#/components/schemas/Firmware"}}},required:["firmwares"]}},required:["data"]}]}}}},400:{$ref:"#/components/responses/ErrorResponseBadRequest"},401:{$ref:"#/components/responses/ErrorResponseUnauthorized"},403:{$ref:"#/components/responses/ErrorResponseForbidden"},408:{$ref:"#/components/responses/ErrorResponseRequestTimeout"},413:{$ref:"#/components/responses/ErrorResponsePayloadTooLarge"},429:{$ref:"#/components/responses/ErrorResponseTooManyRequests"},500:{$ref:"#/components/responses/ErrorResponseInternalServerError"},503:{$ref:"#/components/responses/ErrorResponseServiceUnavailable"}}}},"/firmware/deploymentGroup/assign":{options:{operationId:"assignFirmwareDeploymentGroupOptions",responses:{200:{$ref:"#/components/responses/DefaultOptionsResponse"}},"x-amazon-apigateway-integration":{type:"mock",requestTemplates:{"application/json":`{"statusCode" : 200}
`},responses:{default:{statusCode:200,responseParameters:{"method.response.header.Access-Control-Allow-Headers":"'*'","method.response.header.Access-Control-Allow-Methods":"'OPTIONS'","method.response.header.Access-Control-Allow-Origin":"'*'"}}}}},post:{summary:"Assign devices to a firmware deployment group.",operationId:"assignFirmwareDeploymentGroup",security:[{sigV4:[]}],"x-amazon-apigateway-integration":{uri:"arn:aws:apigateway:eu-central-1:lambda:path/2015-03-31/functions/arn:aws:lambda:eu-central-1:217109539042:function:fab_v1/invocations",httpMethod:"POST",type:"aws_proxy",passthroughBehavior:"when_no_match"},requestBody:{description:"Parameters for the assignment of devices to a firmware deployment group.",required:!0,content:{"application/json":{schema:{type:"object",properties:{assign:{type:"object",description:"Properties of entity to which assign devices to.",properties:{firmwareDeploymentGroupId:{type:"integer",format:"int32",description:"Identifier of the firmware deployment group to which assign the selected devices to. See endpoint `/firmware/deploymentGroup/list` for valid values.",example:1}},required:["firmwareDeploymentGroupId"]},select:{type:"object",description:"Selection criteria to specify the devices to assign. At least one of the parameters is required. Note that the devices must be of the same product that the firmware deployment group relates to.",properties:{identifierType:{description:"The type of identifier for the device.",type:"string",enum:["ProductSerial","ProductSerialId","DataMatrixCode","DeviceHash","SerialNumber"],example:"SerialNumber"},identifierValues:{description:"Identifier values of the type as specified in parameter identifierType.",type:"array",items:{type:"string"},example:["88801"]},productCode:{description:'Product code of the device. This parameter is required for identifierType "SerialNumber".',type:"integer",format:"int32",example:2},tagIds:{type:"array",items:{type:"integer",format:"int32"},description:"Tag identifiers of the devices to be assigned to. See endpoint `/tag/list` for valid values.",example:[1]},limit:{type:"integer",format:"int32",description:"Number of devices to limit the selection to.",example:100}}},action:{type:"string",enum:["PREPARE","COMMIT"],description:"Prepare and assign devices to a firmware deployment group. Calling the endpoint with action `PREPARE` will return an integrity value required for the call with action `COMMIT`.",example:"COMMIT"},integrityValue:{type:"string",description:"Integrity value as provided by a previous call with action `PREPARE`. Required for a call with action `COMMIT`.",example:"3A7B2F91C0E45D8E9ABC1234567890DEF112233445566778899AABBCCDDEEFF"}},required:["action"]}}}},responses:{200:{description:"OK response.",content:{"application/json":{schema:{allOf:[{$ref:"#/components/schemas/ResponseBase"},{type:"object",properties:{data:{type:"object",properties:{devices:{type:"array",items:{type:"object",properties:{productSerial:{$ref:"#/components/schemas/ProductSerial"},productSerialId:{allOf:[{$ref:"#/components/schemas/ProductSerialId"},{description:"Unique identifier of the device. The value is the combination of product code and serial number represented as an integer. Included only if this attribute was part of the selection criteria."}]},dataMatrixCode:{allOf:[{$ref:"#/components/schemas/DataMatrixCode"},{description:"Data matrix code as foreign identifier as placed on the PCB of each device. Included only if this attribute was part of the selection criteria."}]},deviceHash:{allOf:[{$ref:"#/components/schemas/DeviceHash"},{description:"Unique hash of the device used for authentication. Included only if this attribute was part of the selection criteria."}]},productCode:{allOf:[{$ref:"#/components/schemas/ProductCode"},{description:"Code that identifies a product. It is also part of the product serial and product serial id. Included only if this attribute was part of the selection criteria."}]},serialNumber:{allOf:[{$ref:"#/components/schemas/SerialNumber"},{description:"Serial number of the device with regards to the product code. It is also part of the product serial and product serial id. Included only if this attribute was part of the selection criteria."}]},groupId:{type:"integer",description:"Identifier of the group that the device was assigned to previously.",format:"int32"},remarks:{type:"string",description:"Free text for remarks on a device.",example:"Inverter test series for container."}},required:["productSerial","groupId"]}},integrityValue:{type:"string",description:"Integrity value provided upon a call with action `PREPARE`. The value needs to be provided with a subsequent call specifying action `COMMIT`.",example:"3A7B2F91C0E45D8E9ABC1234567890DEF112233445566778899AABBCCDDEEFF"}},required:["devices"]}},required:["data"]}]}}}},400:{$ref:"#/components/responses/ErrorResponseBadRequest"},401:{$ref:"#/components/responses/ErrorResponseUnauthorized"},403:{$ref:"#/components/responses/ErrorResponseForbidden"},408:{$ref:"#/components/responses/ErrorResponseRequestTimeout"},413:{$ref:"#/components/responses/ErrorResponsePayloadTooLarge"},429:{$ref:"#/components/responses/ErrorResponseTooManyRequests"},500:{$ref:"#/components/responses/ErrorResponseInternalServerError"},503:{$ref:"#/components/responses/ErrorResponseServiceUnavailable"}}}},"/firmware/deploymentGroup/create":{options:{operationId:"createFirmwareDeploymentGroupOptions",responses:{200:{$ref:"#/components/responses/DefaultOptionsResponse"}},"x-amazon-apigateway-integration":{type:"mock",requestTemplates:{"application/json":`{"statusCode" : 200}
`},responses:{default:{statusCode:200,responseParameters:{"method.response.header.Access-Control-Allow-Headers":"'*'","method.response.header.Access-Control-Allow-Methods":"'OPTIONS'","method.response.header.Access-Control-Allow-Origin":"'*'"}}}}},post:{summary:"Create a firmware deployment group for a product.",operationId:"createFirmwareDeploymentGroup",security:[{sigV4:[]}],"x-amazon-apigateway-integration":{uri:"arn:aws:apigateway:eu-central-1:lambda:path/2015-03-31/functions/arn:aws:lambda:eu-central-1:217109539042:function:fab_v1/invocations",httpMethod:"POST",type:"aws_proxy",passthroughBehavior:"when_no_match"},requestBody:{description:"Create a firmware deployment group for a product.",required:!0,content:{"application/json":{schema:{type:"object",properties:{productId:{type:"number",format:"int32",description:"Identifier of the product. See endpoint `/product/list` for valid values.",example:1},name:{type:"string",description:"Name of the firmware deployment group.",example:"Hofheim test inverters"},description:{type:"string",description:"Description of the firmware deployment group.",example:"Comprises all inverters on the Hofheim test site."},isDefaultForProduct:{type:"boolean",description:"If set to `true` this group becomes the new default firmware deployment group for the specified product. The default parameter value is `false`. New devices of that product will be assigned to the default firmware deployment group.",example:!1}},required:["productId","name","description"]}}}},responses:{200:{description:"OK response.",content:{"application/json":{schema:{allOf:[{$ref:"#/components/schemas/ResponseBase"},{type:"object",properties:{data:{type:"object",properties:{firmwareDeploymentGroup:{type:"object",properties:{id:{type:"number",format:"int32",description:"Identifier of the firmware deployment group.",example:1}},required:["id"]}},required:["firmwareDeploymentGroup"]}},required:["data"]}]}}}},400:{$ref:"#/components/responses/ErrorResponseBadRequest"},401:{$ref:"#/components/responses/ErrorResponseUnauthorized"},403:{$ref:"#/components/responses/ErrorResponseForbidden"},408:{$ref:"#/components/responses/ErrorResponseRequestTimeout"},413:{$ref:"#/components/responses/ErrorResponsePayloadTooLarge"},429:{$ref:"#/components/responses/ErrorResponseTooManyRequests"},500:{$ref:"#/components/responses/ErrorResponseInternalServerError"},503:{$ref:"#/components/responses/ErrorResponseServiceUnavailable"}}}},"/firmware/deploymentGroup/list":{options:{operationId:"firmwareDeploymentGroupListOptions",responses:{200:{$ref:"#/components/responses/DefaultOptionsResponse"}},"x-amazon-apigateway-integration":{type:"mock",requestTemplates:{"application/json":`{"statusCode" : 200}
`},responses:{default:{statusCode:200,responseParameters:{"method.response.header.Access-Control-Allow-Headers":"'*'","method.response.header.Access-Control-Allow-Methods":"'OPTIONS'","method.response.header.Access-Control-Allow-Origin":"'*'"}}}}},post:{summary:"Get a list of firmware deployment groups.",operationId:"firmwareDeploymentGroupList",security:[{sigV4:[]}],"x-amazon-apigateway-integration":{uri:"arn:aws:apigateway:eu-central-1:lambda:path/2015-03-31/functions/arn:aws:lambda:eu-central-1:217109539042:function:fab_v1/invocations",httpMethod:"POST",type:"aws_proxy",passthroughBehavior:"when_no_match"},requestBody:{description:"Parameters for filters on the firmware list.",required:!0,content:{"application/json":{schema:{type:"object",properties:{productIds:{type:"array",items:{type:"integer",format:"int32",description:"Identifier of a product for which to filter."}},firmwareDeploymentGroupIds:{type:"array",items:{type:"integer",format:"int32",description:"Identifier of a firmware deployment group for which to filter."}},isDefaultForProduct:{type:"boolean",description:"Filter firmware deployment groups list default or non-default groups for products.",example:!0}}}}}},responses:{200:{description:"OK response.",content:{"application/json":{schema:{allOf:[{$ref:"#/components/schemas/ResponseBase"},{type:"object",properties:{data:{type:"object",properties:{firmwareDeploymentGroups:{type:"array",items:{type:"object",properties:{id:{type:"number",format:"int32",description:"Identifier of the firmware deployment group.",example:1},name:{type:"string",description:"Name of the firmware deployment group.",example:"Hofheim test inverters"},description:{type:"string",description:"Description of the firmware deployment group.",example:"Comprises all inverters on the Hofheim test site."},creationTimeStamp:{type:"string",format:"date-time",description:"Creation time stamp of the firmware deployment group."},usage:{type:"number",format:"int32",description:"Number of devices that have this deployment group set."},product:{$ref:"#/components/schemas/Product"},isDefaultForProduct:{type:"boolean",description:"Specifies if this group is the default firmware deployment group for a product. New devices of that product will be assigned to the default firmware deployment group.",example:!1}},required:["id","name","description","creationTimeStamp","usage","product","isDefaultForProduct"]}}},required:["firmwareDeploymentGroups"]}},required:["data"]}]}}}},400:{$ref:"#/components/responses/ErrorResponseBadRequest"},401:{$ref:"#/components/responses/ErrorResponseUnauthorized"},403:{$ref:"#/components/responses/ErrorResponseForbidden"},408:{$ref:"#/components/responses/ErrorResponseRequestTimeout"},413:{$ref:"#/components/responses/ErrorResponsePayloadTooLarge"},429:{$ref:"#/components/responses/ErrorResponseTooManyRequests"},500:{$ref:"#/components/responses/ErrorResponseInternalServerError"},503:{$ref:"#/components/responses/ErrorResponseServiceUnavailable"}}}},"/firmware/deploymentGroup/modify":{options:{operationId:"modifyFirmwareDeploymentGroupOptions",responses:{200:{$ref:"#/components/responses/DefaultOptionsResponse"}},"x-amazon-apigateway-integration":{type:"mock",requestTemplates:{"application/json":`{"statusCode" : 200}
`},responses:{default:{statusCode:200,responseParameters:{"method.response.header.Access-Control-Allow-Headers":"'*'","method.response.header.Access-Control-Allow-Methods":"'OPTIONS'","method.response.header.Access-Control-Allow-Origin":"'*'"}}}}},post:{summary:"Modify a firmware deployment group for a product.",operationId:"modifyFirmwareDeploymentGroup",security:[{sigV4:[]}],"x-amazon-apigateway-integration":{uri:"arn:aws:apigateway:eu-central-1:lambda:path/2015-03-31/functions/arn:aws:lambda:eu-central-1:217109539042:function:fab_v1/invocations",httpMethod:"POST",type:"aws_proxy",passthroughBehavior:"when_no_match"},requestBody:{description:"Parameters for firmware deployment group modification. At least one of the parameters `name`, `description`, or `isDefaultForProduct` must be specified.",required:!0,content:{"application/json":{schema:{type:"object",properties:{firmwareDeploymentGroupId:{type:"number",format:"int32",description:"Identifier of the firmware deployment group.",example:1},name:{type:"string",description:"Name of the firmware deployment group.",example:"Hofheim test inverters"},description:{type:"string",description:"Description of the firmware deployment group.",example:"Comprises all inverters on the Hofheim test site."},isDefaultForProduct:{type:"boolean",description:"If set to `true` this group becomes the new default firmware deployment group for the specified product.",example:!0}},required:["firmwareDeploymentGroupId"]}}}},responses:{200:{description:"OK response.",content:{"application/json":{schema:{allOf:[{$ref:"#/components/schemas/ResponseBase"},{type:"object",properties:{data:{type:"object",properties:{firmwareDeploymentGroup:{type:"object",properties:{id:{type:"number",format:"int32",description:"Identifier of the firmware deployment group.",example:1}},required:["id"]}},required:["firmwareDeploymentGroup"]}},required:["data"]}]}}}},400:{$ref:"#/components/responses/ErrorResponseBadRequest"},401:{$ref:"#/components/responses/ErrorResponseUnauthorized"},403:{$ref:"#/components/responses/ErrorResponseForbidden"},408:{$ref:"#/components/responses/ErrorResponseRequestTimeout"},413:{$ref:"#/components/responses/ErrorResponsePayloadTooLarge"},429:{$ref:"#/components/responses/ErrorResponseTooManyRequests"},500:{$ref:"#/components/responses/ErrorResponseInternalServerError"},503:{$ref:"#/components/responses/ErrorResponseServiceUnavailable"}}}},"/firmware/file/create":{options:{operationId:"createFirmwareFileOptions",responses:{200:{$ref:"#/components/responses/DefaultOptionsResponse"}},"x-amazon-apigateway-integration":{type:"mock",requestTemplates:{"application/json":`{"statusCode" : 200}
`},responses:{default:{statusCode:200,responseParameters:{"method.response.header.Access-Control-Allow-Headers":"'*'","method.response.header.Access-Control-Allow-Methods":"'OPTIONS'","method.response.header.Access-Control-Allow-Origin":"'*'"}}}}},post:{summary:"Create a firmware file",operationId:"createFirmwareFile",security:[{sigV4:[]}],"x-amazon-apigateway-integration":{uri:"arn:aws:apigateway:eu-central-1:lambda:path/2015-03-31/functions/arn:aws:lambda:eu-central-1:217109539042:function:fab_v1/invocations",httpMethod:"POST",type:"aws_proxy",passthroughBehavior:"when_no_match"},requestBody:{description:"Create a firmware file of a specific firmware file type.",required:!0,content:{"application/json":{schema:{type:"object",properties:{fileTypeId:{type:"number",format:"int32",description:"Identifier of the firmware file type. See endpoint `/firmware/fileType/list` for valid values.",example:1},releaseTypeIds:{type:"array",description:"Identifiers of the release types this file firmware file may be used for. See endpoint `/firmware/releaseType/list` for valid values.",items:{type:"number",format:"int32"}},productIds:{type:"array",description:"Identifiers of the products this file firmware file may be used for. See endpoint `/product/list` for valid values.",items:{type:"number",format:"int32"}},name:{type:"string",description:"Name of the file. The combination of name and version of a file must be unique.",example:"igb-app.bin"},version:{type:"string",description:"Version of the file. The combination of name and version of a file must be unique.",example:"1.0.2-beta1"},fileHash:{type:"string",description:"Hex representation of a CRC32 hash code on the firmware file.",example:"88adbbce"},remarks:{type:"string",description:"Remarks for the file."}},required:["fileTypeId","releaseTypeIds","productIds","name","version"]}}}},responses:{200:{description:"OK response.",content:{"application/json":{schema:{allOf:[{$ref:"#/components/schemas/ResponseBase"},{type:"object",properties:{data:{type:"object",properties:{firmwareFile:{type:"object",properties:{id:{type:"number",format:"int32",description:"Identifier of the firmware file.",example:1},encryptionKey:{type:"string",description:"Key to encrypt the firmware file with prior to its upload.",example:"32d65782c9c4ed2bca53549ecb1d8e8d543aab23e9a61992754a56b09a752c93"},upload:{type:"object",properties:{httpMethod:{type:"string",description:"URL to use for uploading the encrypted firmware file.",enum:["PUT"],example:"PUT"},url:{type:"string",example:"https://solarnative-firmware-v1.s3.eu-central-1.amazonaws.com/TEST_file_2023-11-24T21..."},urlExpiry:{type:"string",format:"date-time",description:"Expiry of the upload url as ISO 8601 formatted string.",example:"2023-09-05T15:30:21Z"}},required:["httpMethod","url","urlExpiry"]}},required:["id","encryptionKey","upload"]}},required:["firmwareFile"]}},required:["data"]}]}}}},400:{$ref:"#/components/responses/ErrorResponseBadRequest"},401:{$ref:"#/components/responses/ErrorResponseUnauthorized"},403:{$ref:"#/components/responses/ErrorResponseForbidden"},408:{$ref:"#/components/responses/ErrorResponseRequestTimeout"},413:{$ref:"#/components/responses/ErrorResponsePayloadTooLarge"},429:{$ref:"#/components/responses/ErrorResponseTooManyRequests"},500:{$ref:"#/components/responses/ErrorResponseInternalServerError"},503:{$ref:"#/components/responses/ErrorResponseServiceUnavailable"}}}},"/firmware/file/get":{options:{operationId:"getFirmwareFileOptions",responses:{200:{$ref:"#/components/responses/DefaultOptionsResponse"}},"x-amazon-apigateway-integration":{type:"mock",requestTemplates:{"application/json":`{"statusCode" : 200}
`},responses:{default:{statusCode:200,responseParameters:{"method.response.header.Access-Control-Allow-Headers":"'*'","method.response.header.Access-Control-Allow-Methods":"'OPTIONS'","method.response.header.Access-Control-Allow-Origin":"'*'"}}}}},post:{summary:"Get a list of firmware files.",operationId:"getFirmwareFile",security:[{sigV4:[]}],"x-amazon-apigateway-integration":{uri:"arn:aws:apigateway:eu-central-1:lambda:path/2015-03-31/functions/arn:aws:lambda:eu-central-1:217109539042:function:fab_v1/invocations",httpMethod:"POST",type:"aws_proxy",passthroughBehavior:"when_no_match"},requestBody:{description:"Parameters for filters which files to obtain.",required:!0,content:{"application/json":{schema:{type:"object",properties:{firmwareFileIds:{type:"array",description:"Identifiers of the files to filter for.",items:{type:"number",format:"int32"}}},required:["firmwareFileIds"]}}}},responses:{200:{description:"OK response.",content:{"application/json":{schema:{allOf:[{$ref:"#/components/schemas/ResponseBase"},{type:"object",properties:{data:{type:"object",properties:{firmwareFiles:{type:"array",items:{type:"object",properties:{id:{type:"number",format:"int32"},type:{$ref:"#/components/schemas/FirmwareFileType"},releaseTypes:{type:"array",items:{$ref:"#/components/schemas/FirmwareReleaseType"}},products:{type:"array",items:{$ref:"#/components/schemas/Product"}},name:{type:"string",description:"Name of the file.",example:"igb-app.bin"},version:{type:"string",description:"Version of the file.",example:"1.0.2-beta1"},fileHash:{type:"string",description:"Hex representation of a CRC32 hash code on the firmware file.",example:"88adbbce"},remarks:{type:"string"},firmwares:{type:"array",items:{type:"object",properties:{id:{type:"number",format:"int32",description:"Identifier of the firmware.",example:1},name:{type:"string",description:"Name of the firmware.",example:"Firmware for the IntelliGate Balcony v1."},releases:{type:"array",items:{$ref:"#/components/schemas/FirmwareReleaseBase"}}},required:["id","name","releases"]}},encryptionKey:{type:"string",description:"Key to decrypt the firmware file after download.",example:"32d65782c9c4ed2bca53549ec43aab23e9a61992754a56b09a752c93"},download:{type:"object",properties:{httpMethod:{type:"string",description:"URL to use for downloading the encrypted firmware file.",enum:["GET"],example:"GET"},url:{type:"string",example:"https://solarnative-firmware-v1.s3.eu-central-1.amazonaws.com/TEST_file_2023-11-24T21..."},urlExpiry:{type:"string",format:"date-time",description:"Expiry of the download url as ISO 8601 formatted string.",example:"2023-09-05T15:30:21Z"}},required:["httpMethod","url","urlExpiry"]}}},required:["id","type","releaseTypes","products","name","version","fileHash","firmwares","encryptionKey","download"]}},required:["firmwareFiles"]}},required:["data"]}]}}}},400:{$ref:"#/components/responses/ErrorResponseBadRequest"},401:{$ref:"#/components/responses/ErrorResponseUnauthorized"},403:{$ref:"#/components/responses/ErrorResponseForbidden"},408:{$ref:"#/components/responses/ErrorResponseRequestTimeout"},413:{$ref:"#/components/responses/ErrorResponsePayloadTooLarge"},429:{$ref:"#/components/responses/ErrorResponseTooManyRequests"},500:{$ref:"#/components/responses/ErrorResponseInternalServerError"},503:{$ref:"#/components/responses/ErrorResponseServiceUnavailable"}}}},"/firmware/file/list":{options:{operationId:"getFirmwareFileListOptions",responses:{200:{$ref:"#/components/responses/DefaultOptionsResponse"}},"x-amazon-apigateway-integration":{type:"mock",requestTemplates:{"application/json":`{"statusCode" : 200}
`},responses:{default:{statusCode:200,responseParameters:{"method.response.header.Access-Control-Allow-Headers":"'*'","method.response.header.Access-Control-Allow-Methods":"'OPTIONS'","method.response.header.Access-Control-Allow-Origin":"'*'"}}}}},post:{summary:"Get a list of firmware files.",operationId:"getFirmwareFileList",security:[{sigV4:[]}],"x-amazon-apigateway-integration":{uri:"arn:aws:apigateway:eu-central-1:lambda:path/2015-03-31/functions/arn:aws:lambda:eu-central-1:217109539042:function:fab_v1/invocations",httpMethod:"POST",type:"aws_proxy",passthroughBehavior:"when_no_match"},requestBody:{description:"Parameters for filters on the list of firmware files.",required:!0,content:{"application/json":{schema:{type:"object",properties:{firmwareFileIds:{type:"array",description:"Identifiers of the files to filter for.",items:{type:"number",format:"int32"}},firmwareReleaseIds:{type:"array",description:"Identifiers of the releases to filter for.",items:{type:"number",format:"int32"}},firmwareFileTypeIds:{type:"array",description:"Identifiers of the file types to filter for. See endpoint `/firmware/fileType/list` for possible values.",items:{type:"number",format:"int32"}},firmwareReleaseTypeIds:{type:"array",description:"Identifiers of the release types to filter for. See endpoint `/firmware/releaseType/list` for possible values.",items:{type:"number",format:"int32"}}}}}}},responses:{200:{description:"OK response.",content:{"application/json":{schema:{allOf:[{$ref:"#/components/schemas/ResponseBase"},{type:"object",properties:{data:{type:"object",properties:{firmwareFiles:{type:"array",items:{type:"object",properties:{id:{type:"number",format:"int32"},type:{$ref:"#/components/schemas/FirmwareFileType"},releaseTypes:{type:"array",items:{$ref:"#/components/schemas/FirmwareReleaseType"}},products:{type:"array",items:{$ref:"#/components/schemas/Product"}},name:{type:"string",description:"Name of the file.",example:"igb-app.bin"},version:{type:"string",description:"Version of the file.",example:"1.0.2-beta1"},fileHash:{type:"string",description:"Hex representation of a CRC32 hash code on the firmware file.",example:"88adbbce"},remarks:{type:"string"},firmwares:{type:"array",items:{type:"object",properties:{id:{type:"number",format:"int32",description:"Identifier of the firmware.",example:1},name:{type:"string",description:"Name of the firmware.",example:"Firmware for the IntelliGate Balcony v1."},releases:{type:"array",items:{$ref:"#/components/schemas/FirmwareReleaseBase"}}},required:["id","name","releases"]}}},required:["id","type","releaseTypes","products","name","version","fileHash","firmwares"]}}},required:["firmwareFiles"]}},required:["data"]}]}}}},400:{$ref:"#/components/responses/ErrorResponseBadRequest"},401:{$ref:"#/components/responses/ErrorResponseUnauthorized"},403:{$ref:"#/components/responses/ErrorResponseForbidden"},408:{$ref:"#/components/responses/ErrorResponseRequestTimeout"},413:{$ref:"#/components/responses/ErrorResponsePayloadTooLarge"},429:{$ref:"#/components/responses/ErrorResponseTooManyRequests"},500:{$ref:"#/components/responses/ErrorResponseInternalServerError"},503:{$ref:"#/components/responses/ErrorResponseServiceUnavailable"}}}},"/firmware/fileType/list":{options:{operationId:"getFirmwareFileTypeListOptions",responses:{200:{$ref:"#/components/responses/DefaultOptionsResponse"}},"x-amazon-apigateway-integration":{type:"mock",requestTemplates:{"application/json":`{"statusCode" : 200}
`},responses:{default:{statusCode:200,responseParameters:{"method.response.header.Access-Control-Allow-Headers":"'*'","method.response.header.Access-Control-Allow-Methods":"'OPTIONS'","method.response.header.Access-Control-Allow-Origin":"'*'"}}}}},post:{summary:"Get a list of firmware file types.",operationId:"getFirmwareFileTypeList",security:[{sigV4:[]}],"x-amazon-apigateway-integration":{uri:"arn:aws:apigateway:eu-central-1:lambda:path/2015-03-31/functions/arn:aws:lambda:eu-central-1:217109539042:function:fab_v1/invocations",httpMethod:"POST",type:"aws_proxy",passthroughBehavior:"when_no_match"},responses:{200:{description:"OK response.",content:{"application/json":{schema:{allOf:[{$ref:"#/components/schemas/ResponseBase"},{type:"object",properties:{data:{type:"object",properties:{firmwareFileTypes:{type:"array",items:{allOf:[{$ref:"#/components/schemas/FirmwareFileType"},{type:"object",properties:{description:{type:"string"}}}]}}},required:["firmwareFileTypes"]}},required:["data"]}]}}}},400:{$ref:"#/components/responses/ErrorResponseBadRequest"},401:{$ref:"#/components/responses/ErrorResponseUnauthorized"},403:{$ref:"#/components/responses/ErrorResponseForbidden"},408:{$ref:"#/components/responses/ErrorResponseRequestTimeout"},413:{$ref:"#/components/responses/ErrorResponsePayloadTooLarge"},429:{$ref:"#/components/responses/ErrorResponseTooManyRequests"},500:{$ref:"#/components/responses/ErrorResponseInternalServerError"},503:{$ref:"#/components/responses/ErrorResponseServiceUnavailable"}}}},"/firmware/release/create":{options:{operationId:"createFirmwareReleaseOptions",responses:{200:{$ref:"#/components/responses/DefaultOptionsResponse"}},"x-amazon-apigateway-integration":{type:"mock",requestTemplates:{"application/json":`{"statusCode" : 200}
`},responses:{default:{statusCode:200,responseParameters:{"method.response.header.Access-Control-Allow-Headers":"'*'","method.response.header.Access-Control-Allow-Methods":"'OPTIONS'","method.response.header.Access-Control-Allow-Origin":"'*'"}}}}},post:{summary:"Create a firmware release",operationId:"createFirmwareRelease",security:[{sigV4:[]}],"x-amazon-apigateway-integration":{uri:"arn:aws:apigateway:eu-central-1:lambda:path/2015-03-31/functions/arn:aws:lambda:eu-central-1:217109539042:function:fab_v1/invocations",httpMethod:"POST",type:"aws_proxy",passthroughBehavior:"when_no_match"},requestBody:{description:"Create a release for a firmware.",required:!0,content:{"application/json":{schema:{type:"object",properties:{firmwareId:{type:"number",format:"int32",description:"Identifier of the firmware. See endpoint `/firmware/list` for possible values.",example:1},releaseTypeId:{type:"number",format:"int32",description:"Identifiers of the type of this release. See endpoint `/firmware/releaseType/list` for possible values.",example:1},tag:{type:"string",description:"Tag of this release. The tag must be unique per firmware.",example:"v1.0.3-beta1"},remarks:{type:"string",description:"Remarks for the release.",example:"Beta release for testing of PCB version 5.8"},firmwareFileIds:{type:"array",items:{type:"number"},description:"Identifier of the files for this release."}},required:["firmwareId","releaseTypeId","tag","remarks","firmwareFileIds"]}}}},responses:{200:{description:"OK response.",content:{"application/json":{schema:{allOf:[{$ref:"#/components/schemas/ResponseBase"},{type:"object",properties:{data:{type:"object",properties:{firmwareRelease:{type:"object",properties:{id:{type:"number",format:"int32",description:"Identifier of the firmware release.",example:1}},required:["id"]}},required:["firmwareRelease"]}},required:["data"]}]}}}},400:{$ref:"#/components/responses/ErrorResponseBadRequest"},401:{$ref:"#/components/responses/ErrorResponseUnauthorized"},403:{$ref:"#/components/responses/ErrorResponseForbidden"},408:{$ref:"#/components/responses/ErrorResponseRequestTimeout"},413:{$ref:"#/components/responses/ErrorResponsePayloadTooLarge"},429:{$ref:"#/components/responses/ErrorResponseTooManyRequests"},500:{$ref:"#/components/responses/ErrorResponseInternalServerError"},503:{$ref:"#/components/responses/ErrorResponseServiceUnavailable"}}}},"/firmware/release/list":{options:{operationId:"getFirmwareReleaseListOptions",responses:{200:{$ref:"#/components/responses/DefaultOptionsResponse"}},"x-amazon-apigateway-integration":{type:"mock",requestTemplates:{"application/json":`{"statusCode" : 200}
`},responses:{default:{statusCode:200,responseParameters:{"method.response.header.Access-Control-Allow-Headers":"'*'","method.response.header.Access-Control-Allow-Methods":"'OPTIONS'","method.response.header.Access-Control-Allow-Origin":"'*'"}}}}},post:{summary:"Get a list of firmware releases.",operationId:"getFirmwareReleaseList",security:[{sigV4:[]}],"x-amazon-apigateway-integration":{uri:"arn:aws:apigateway:eu-central-1:lambda:path/2015-03-31/functions/arn:aws:lambda:eu-central-1:217109539042:function:fab_v1/invocations",httpMethod:"POST",type:"aws_proxy",passthroughBehavior:"when_no_match"},requestBody:{description:"Parameters for filters on the list of firmware releases. At least one of the parameters must be set.",required:!0,content:{"application/json":{schema:{type:"object",properties:{firmwareIds:{type:"array",description:"Identifiers of the firmware to list firmware releases for. See endpoint `/firmware/list` for possible values.",items:{type:"number",format:"int32"}},firmwareReleaseIds:{type:"array",description:"Identifiers of the firmware releases to list.",items:{type:"number",format:"int32"}},firmwareReleaseTypeIds:{type:"array",description:"Identifiers of the firmware release types for which to list firmware releases. See endpoint `/firmware/releaseType/list` for possible values.",items:{type:"number",format:"int32"}},productVariantIds:{type:"array",description:"Identifiers of the product variants for which to list firmware releases. See endpoint `/product/variant/list` for possible values.",items:{type:"number",format:"int32"}}}}}}},responses:{200:{description:"OK response.",content:{"application/json":{schema:{allOf:[{$ref:"#/components/schemas/ResponseBase"},{type:"object",properties:{data:{type:"object",properties:{firmwareReleases:{type:"array",items:{allOf:[{$ref:"#/components/schemas/FirmwareRelease"},{type:"object",properties:{firmware:{type:"object",properties:{id:{type:"number",format:"int32",description:"Identifier of the firmware.",example:1},name:{type:"string",description:"Name of the firmware.",example:"IntelliGate Balcony v1"}},required:["id","name"]},type:{$ref:"#/components/schemas/FirmwareReleaseType"},files:{type:"array",items:{type:"object",properties:{id:{type:"number",format:"int32",description:"Identifier of the firmware file.",example:1},name:{type:"string",description:"Name of the file.",example:"igb-app.bin"},version:{type:"string",description:"Version of the file.",example:"1.0.2-beta1"},fileHash:{type:"string",description:"Hex representation of a CRC32 hash code on the firmware file.",example:"88adbbce"},type:{$ref:"#/components/schemas/FirmwareFileType"}},required:["id","name","version","fileHash","type"]}},productVariants:{type:"array",items:{type:"object",properties:{id:{type:"integer",format:"int32",description:"Internal identifier of the product variant",example:1},erpMaterialNumber:{type:"string",description:"Material number as per the ERP. Either provide this parameter or provide `productVariantId`.",example:"100543-00"}},required:["id"]}}},required:["firmware","type","files","productVariants"]}]}}},required:["firmwareReleases"]}},required:["data"]}]}}}},400:{$ref:"#/components/responses/ErrorResponseBadRequest"},401:{$ref:"#/components/responses/ErrorResponseUnauthorized"},403:{$ref:"#/components/responses/ErrorResponseForbidden"},408:{$ref:"#/components/responses/ErrorResponseRequestTimeout"},413:{$ref:"#/components/responses/ErrorResponsePayloadTooLarge"},429:{$ref:"#/components/responses/ErrorResponseTooManyRequests"},500:{$ref:"#/components/responses/ErrorResponseInternalServerError"},503:{$ref:"#/components/responses/ErrorResponseServiceUnavailable"}}}},"/firmware/release/modify":{options:{operationId:"modifyFirmwareReleaseOptions",responses:{200:{$ref:"#/components/responses/DefaultOptionsResponse"}},"x-amazon-apigateway-integration":{type:"mock",requestTemplates:{"application/json":`{"statusCode" : 200}
`},responses:{default:{statusCode:200,responseParameters:{"method.response.header.Access-Control-Allow-Headers":"'*'","method.response.header.Access-Control-Allow-Methods":"'OPTIONS'","method.response.header.Access-Control-Allow-Origin":"'*'"}}}}},post:{summary:"Modify a firmware release",operationId:"modifyFirmwareRelease",security:[{sigV4:[]}],"x-amazon-apigateway-integration":{uri:"arn:aws:apigateway:eu-central-1:lambda:path/2015-03-31/functions/arn:aws:lambda:eu-central-1:217109539042:function:fab_v1/invocations",httpMethod:"POST",type:"aws_proxy",passthroughBehavior:"when_no_match"},requestBody:{description:"Create a release for a firmware. At least one of the parameters `tag`, `remarks`, and `productVariantIds` is required.",required:!0,content:{"application/json":{schema:{type:"object",properties:{firmwareReleaseId:{type:"number",format:"int32",description:"Identifier of a firmware release. See endpoint `/firmware/release/list` for possible values.",example:3},tag:{type:"string",description:"Tag of this release. The tag must be unique per firmware.",example:"v1.0.3-beta1"},remarks:{type:"string",description:"Remarks for the release.",example:"Beta release for testing of PCB version 5.8"},productVariantIds:{type:"array",items:{type:"number",format:"int32"},description:"Identifier of the product variants this release may be used for."}},required:["firmwareReleaseId"]}}}},responses:{200:{description:"OK response.",content:{"application/json":{schema:{allOf:[{$ref:"#/components/schemas/ResponseBase"},{type:"object",properties:{data:{type:"object",properties:{firmwareRelease:{type:"object",properties:{id:{type:"number",format:"int32",description:"Identifier of the firmware release.",example:1}},required:["id"]}},required:["firmwareRelease"]}},required:["data"]}]}}}},400:{$ref:"#/components/responses/ErrorResponseBadRequest"},401:{$ref:"#/components/responses/ErrorResponseUnauthorized"},403:{$ref:"#/components/responses/ErrorResponseForbidden"},408:{$ref:"#/components/responses/ErrorResponseRequestTimeout"},413:{$ref:"#/components/responses/ErrorResponsePayloadTooLarge"},429:{$ref:"#/components/responses/ErrorResponseTooManyRequests"},500:{$ref:"#/components/responses/ErrorResponseInternalServerError"},503:{$ref:"#/components/responses/ErrorResponseServiceUnavailable"}}}},"/firmware/releaseType/list":{options:{operationId:"getFirmwareReleaseTypeListOptions",responses:{200:{$ref:"#/components/responses/DefaultOptionsResponse"}},"x-amazon-apigateway-integration":{type:"mock",requestTemplates:{"application/json":`{"statusCode" : 200}
`},responses:{default:{statusCode:200,responseParameters:{"method.response.header.Access-Control-Allow-Headers":"'*'","method.response.header.Access-Control-Allow-Methods":"'OPTIONS'","method.response.header.Access-Control-Allow-Origin":"'*'"}}}}},post:{summary:"Get a list of firmware release types.",operationId:"getFirmwareReleaseTypeList",security:[{sigV4:[]}],"x-amazon-apigateway-integration":{uri:"arn:aws:apigateway:eu-central-1:lambda:path/2015-03-31/functions/arn:aws:lambda:eu-central-1:217109539042:function:fab_v1/invocations",httpMethod:"POST",type:"aws_proxy",passthroughBehavior:"when_no_match"},responses:{200:{description:"OK response.",content:{"application/json":{schema:{allOf:[{$ref:"#/components/schemas/ResponseBase"},{type:"object",properties:{data:{type:"object",properties:{firmwareReleaseTypes:{type:"array",items:{allOf:[{$ref:"#/components/schemas/FirmwareReleaseType"},{type:"object",properties:{description:{type:"string"}}}]}}},required:["firmwareReleaseTypes"]}},required:["data"]}]}}}},400:{$ref:"#/components/responses/ErrorResponseBadRequest"},401:{$ref:"#/components/responses/ErrorResponseUnauthorized"},403:{$ref:"#/components/responses/ErrorResponseForbidden"},408:{$ref:"#/components/responses/ErrorResponseRequestTimeout"},413:{$ref:"#/components/responses/ErrorResponsePayloadTooLarge"},429:{$ref:"#/components/responses/ErrorResponseTooManyRequests"},500:{$ref:"#/components/responses/ErrorResponseInternalServerError"},503:{$ref:"#/components/responses/ErrorResponseServiceUnavailable"}}}},"/logistics/box/create":{options:{operationId:"logisticsBoxCreateOptions",responses:{200:{$ref:"#/components/responses/DefaultOptionsResponse"}},"x-amazon-apigateway-integration":{type:"mock",requestTemplates:{"application/json":`{"statusCode" : 200}
`},responses:{default:{statusCode:200,responseParameters:{"method.response.header.Access-Control-Allow-Headers":"'*'","method.response.header.Access-Control-Allow-Methods":"'OPTIONS'","method.response.header.Access-Control-Allow-Origin":"'*'"}}}}},post:{summary:"Create a logistics box.",operationId:"logisticsBoxCreate",security:[{sigV4:[]}],"x-amazon-apigateway-integration":{uri:"arn:aws:apigateway:eu-central-1:lambda:path/2015-03-31/functions/arn:aws:lambda:eu-central-1:217109539042:function:fab_v1/invocations",httpMethod:"POST",type:"aws_proxy",passthroughBehavior:"when_no_match"},requestBody:{description:"Parameters for the logistics box creation.",required:!0,content:{"application/json":{schema:{type:"object",properties:{productBoxIds:{description:"Product box ids to add to the logistics box.",type:"array",items:{type:"number",format:"int32",example:1}},logisticsBoxTypeId:{description:"Identifier of the logistics box type.",type:"number",format:"int32",example:1}},required:["productBoxIds","logisticsBoxTypeId"]}}}},responses:{200:{description:"OK response.",content:{"application/json":{schema:{allOf:[{$ref:"#/components/schemas/ResponseBase"},{type:"object",properties:{data:{type:"object",properties:{logisticsBoxId:{type:"number",description:"Identifier of the logisitics box.",example:1}},required:["logisticsBoxId"]}},required:["data"]}]}}}},400:{$ref:"#/components/responses/ErrorResponseBadRequest"},401:{$ref:"#/components/responses/ErrorResponseUnauthorized"},403:{$ref:"#/components/responses/ErrorResponseForbidden"},408:{$ref:"#/components/responses/ErrorResponseRequestTimeout"},413:{$ref:"#/components/responses/ErrorResponsePayloadTooLarge"},429:{$ref:"#/components/responses/ErrorResponseTooManyRequests"},500:{$ref:"#/components/responses/ErrorResponseInternalServerError"},503:{$ref:"#/components/responses/ErrorResponseServiceUnavailable"}}}},"/logistics/box/get":{options:{operationId:"logisticsBoxGetOptions",responses:{200:{$ref:"#/components/responses/DefaultOptionsResponse"}},"x-amazon-apigateway-integration":{type:"mock",requestTemplates:{"application/json":`{"statusCode" : 200}
`},responses:{default:{statusCode:200,responseParameters:{"method.response.header.Access-Control-Allow-Headers":"'*'","method.response.header.Access-Control-Allow-Methods":"'OPTIONS'","method.response.header.Access-Control-Allow-Origin":"'*'"}}}}},post:{summary:"Get details of a logistics box.",operationId:"logisticsBoxGet",security:[{sigV4:[]}],"x-amazon-apigateway-integration":{uri:"arn:aws:apigateway:eu-central-1:lambda:path/2015-03-31/functions/arn:aws:lambda:eu-central-1:217109539042:function:fab_v1/invocations",httpMethod:"POST",type:"aws_proxy",passthroughBehavior:"when_no_match"},requestBody:{description:"Parameters for the logistics box selection.",required:!0,content:{"application/json":{schema:{type:"object",properties:{productSerial:{description:"Product serial.",type:"string",example:"0000020000000A"},productBoxId:{description:"Identifier of the product box.",type:"number",format:"int32",example:1},logisticsBoxId:{description:"Identifier of the logistics box.",type:"number",format:"int32",example:1}}}}}},responses:{200:{description:"OK response.",content:{"application/json":{schema:{allOf:[{$ref:"#/components/schemas/ResponseBase"},{type:"object",properties:{data:{type:"object",properties:{logisticsBox:{type:"object",properties:{id:{type:"number",format:"int32",example:1},type:{type:"object",properties:{id:{type:"number",format:"int32",example:1}},required:["id"]},productBoxes:{type:"array",items:{type:"object",properties:{id:{type:"number",format:"int32",example:1},type:{type:"object",properties:{id:{type:"number",format:"int32",example:1},articleNumber:{type:"string",example:"PSB-1PK-10"}},required:["id"]},device:{type:"object",properties:{productSerials:{type:"array",items:{$ref:"#/components/schemas/ProductSerial"}}},required:["productSerials"]}},required:["id","type","device"]}}},required:["id","type","productBoxes"]}},required:["logisticsBox"]}},required:["data"]}]}}}},400:{$ref:"#/components/responses/ErrorResponseBadRequest"},401:{$ref:"#/components/responses/ErrorResponseUnauthorized"},403:{$ref:"#/components/responses/ErrorResponseForbidden"},408:{$ref:"#/components/responses/ErrorResponseRequestTimeout"},413:{$ref:"#/components/responses/ErrorResponsePayloadTooLarge"},429:{$ref:"#/components/responses/ErrorResponseTooManyRequests"},500:{$ref:"#/components/responses/ErrorResponseInternalServerError"},503:{$ref:"#/components/responses/ErrorResponseServiceUnavailable"}}}},"/logistics/boxType/list":{options:{operationId:"logisticsBoxTypeListOptions",responses:{200:{$ref:"#/components/responses/DefaultOptionsResponse"}},"x-amazon-apigateway-integration":{type:"mock",requestTemplates:{"application/json":`{"statusCode" : 200}
`},responses:{default:{statusCode:200,responseParameters:{"method.response.header.Access-Control-Allow-Headers":"'*'","method.response.header.Access-Control-Allow-Methods":"'OPTIONS'","method.response.header.Access-Control-Allow-Origin":"'*'"}}}}},post:{summary:"Get the list of logistics box types.",operationId:"logisticsBoxTypeList",security:[{sigV4:[]}],"x-amazon-apigateway-integration":{uri:"arn:aws:apigateway:eu-central-1:lambda:path/2015-03-31/functions/arn:aws:lambda:eu-central-1:217109539042:function:fab_v1/invocations",httpMethod:"POST",type:"aws_proxy",passthroughBehavior:"when_no_match"},responses:{200:{description:"OK response.",content:{"application/json":{schema:{allOf:[{$ref:"#/components/schemas/ResponseBase"},{type:"object",properties:{data:{type:"object",properties:{logisticsBoxTypes:{type:"array",items:{type:"object",properties:{id:{type:"number",format:"int32",description:"Identifier of the logistics box type.",example:1},numberUnits:{type:"number",format:"int32",description:"Number of units in the logistics box.",example:1},productBoxType:{allOf:[{$ref:"#/components/schemas/ProductBoxType"},{type:"object",properties:{product:{$ref:"#/components/schemas/Product"}},required:["product"]}]}},required:["id","numberUnits","productBoxType"]}}},required:["productBoxTypes"]}},required:["data"]}]}}}},400:{$ref:"#/components/responses/ErrorResponseBadRequest"},401:{$ref:"#/components/responses/ErrorResponseUnauthorized"},403:{$ref:"#/components/responses/ErrorResponseForbidden"},408:{$ref:"#/components/responses/ErrorResponseRequestTimeout"},413:{$ref:"#/components/responses/ErrorResponsePayloadTooLarge"},429:{$ref:"#/components/responses/ErrorResponseTooManyRequests"},500:{$ref:"#/components/responses/ErrorResponseInternalServerError"},503:{$ref:"#/components/responses/ErrorResponseServiceUnavailable"}}}},"/plant/list":{options:{operationId:"getPlantListOptions",responses:{200:{$ref:"#/components/responses/DefaultOptionsResponse"}},"x-amazon-apigateway-integration":{type:"mock",requestTemplates:{"application/json":`{"statusCode" : 200}
`},responses:{default:{statusCode:200,responseParameters:{"method.response.header.Access-Control-Allow-Headers":"'*'","method.response.header.Access-Control-Allow-Methods":"'OPTIONS'","method.response.header.Access-Control-Allow-Origin":"'*'"}}}}},post:{summary:"Get a list of plants with details.",operationId:"getPlantList",security:[{sigV4:[]}],"x-amazon-apigateway-integration":{uri:"arn:aws:apigateway:eu-central-1:lambda:path/2015-03-31/functions/arn:aws:lambda:eu-central-1:217109539042:function:fab_v1/invocations",httpMethod:"POST",type:"aws_proxy",passthroughBehavior:"when_no_match"},requestBody:{description:"Parameters for filters on the list of plants. At least one of the parameters must be set.",required:!0,content:{"application/json":{schema:{type:"object",properties:{plantIds:{type:"array",description:"Identifiers of the plants.",items:{type:"number",format:"int32"}},productSerials:{type:"array",description:"Product serials for which to list plant details. DEPRECATED! Use parameter `device.identifierType` and `device.identifierValues`!",items:{$ref:"#/components/schemas/ProductSerial"}},device:{type:"object",properties:{identifierType:{description:"The type of identifier for the device.",type:"string",enum:["ProductSerial","ProductSerialId","DataMatrixCode","DeviceHash","SerialNumber"],example:"SerialNumber"},identifierValues:{description:"Identifier values of the type as specified in parameter identifierType.",type:"array",items:{type:"string"},example:["88801"]},productCode:{description:'Product code of the device. This parameter is required only for identifierType "SerialNumber".',type:"integer",format:"int32",example:2},tagId:{type:"number",format:"int32",description:"Identifier of the tag set on devices of plants to determine plants."}}},emailAddress:{type:"string",format:"email",description:"Identifiers of the firmware release types for which to list firmware releases. See endpoint `/firmware/releaseType/list` for possible values."},tagId:{type:"number",format:"int32",description:"Identifier of the tag set on devices of plants to determine plants. DEPRECATED! Use parameter `device.tagIt`!"},creationTimeStamp:{type:"object",description:"Creation timestamp of a plant to determine plants.",properties:{periodStart:{type:"number",format:"int64",description:"Start time of the period in which plants were created in milliseconds since epoch. Default is the current timestamp minus 5 days."},periodEnd:{type:"number",format:"int64",description:"End time of the period in which plants were created in milliseconds since epoch."}}}}}}}},responses:{200:{description:"OK response.",content:{"application/json":{schema:{allOf:[{$ref:"#/components/schemas/ResponseBase"},{type:"object",properties:{data:{type:"object",properties:{plants:{type:"array",items:{properties:{id:{type:"integer",format:"int32",description:"ID of the plant"},name:{type:"string",description:"Name of the plant"},creationDate:{type:"string",format:"date-time",description:"Date and time the plant was created"},installationDate:{type:"string",format:"date-time",description:"Date and time the plant was installed"},timeZone:{type:"string",description:"Time zone of the plant",example:"Europe/Berlin"},installedCapacity:{type:"number",format:"float",description:"Installed capacity of the plant in kW"},gridCode:{type:"object",description:"Grid code information",properties:{countryCode:{type:"string",description:"Code of the country the grid code applies to."},name:{type:"string",description:"Name of the grid code."}},required:["countryCode","name"]},address:{$ref:"#/components/schemas/Address"},users:{type:"array",description:"Users registered in that plant.",items:{type:"object",properties:{id:{type:"number",description:"Global identifier of the user."},name:{type:"string",description:"Name of the user in that plant."},email:{type:"string",format:"email",description:"Email of the user in that plant."}}}},gateways:{type:"array",description:"Gateways registered in the plant.",items:{type:"object",properties:{productSerial:{$ref:"#/components/schemas/ProductSerial"},productCode:{$ref:"#/components/schemas/ProductCode"},serialNumber:{$ref:"#/components/schemas/SerialNumber"},creationTimeStamp:{$ref:"#/components/schemas/CreationTimeStamp"},latestContact:{$ref:"#/components/schemas/LatestContact"},messageStats:{$ref:"#/components/schemas/MessageStatistics"}},required:["productSerial","productCode","serialNumber","creationTimeStamp","messageStats"]}},inverters:{type:"array",description:"Inverters registered in the plant.",items:{type:"object",properties:{productSerial:{$ref:"#/components/schemas/ProductSerial"},parentProductSerial:{$ref:"#/components/schemas/ParentProductSerial"},productCode:{$ref:"#/components/schemas/ProductCode"},serialNumber:{$ref:"#/components/schemas/SerialNumber"},creationTimeStamp:{$ref:"#/components/schemas/CreationTimeStamp"},latestContact:{$ref:"#/components/schemas/LatestContact"},messageStats:{$ref:"#/components/schemas/MessageStatistics"}},required:["productSerial","productCode","serialNumber","creationTimeStamp","messageStats"]}}},required:["id","name","creationDate","gridCode","address","users","gateways","inverters"]}}},required:["firmwareReleases"]}},required:["data"]}]}}}},400:{$ref:"#/components/responses/ErrorResponseBadRequest"},401:{$ref:"#/components/responses/ErrorResponseUnauthorized"},403:{$ref:"#/components/responses/ErrorResponseForbidden"},408:{$ref:"#/components/responses/ErrorResponseRequestTimeout"},413:{$ref:"#/components/responses/ErrorResponsePayloadTooLarge"},429:{$ref:"#/components/responses/ErrorResponseTooManyRequests"},500:{$ref:"#/components/responses/ErrorResponseInternalServerError"},503:{$ref:"#/components/responses/ErrorResponseServiceUnavailable"}}}},"/product/boxType/list":{options:{operationId:"productBoxTypeListOptions",responses:{200:{$ref:"#/components/responses/DefaultOptionsResponse"}},"x-amazon-apigateway-integration":{type:"mock",requestTemplates:{"application/json":`{"statusCode" : 200}
`},responses:{default:{statusCode:200,responseParameters:{"method.response.header.Access-Control-Allow-Headers":"'*'","method.response.header.Access-Control-Allow-Methods":"'OPTIONS'","method.response.header.Access-Control-Allow-Origin":"'*'"}}}}},post:{summary:"Get the list of product box types.",operationId:"productBoxTypeList",security:[{sigV4:[]}],"x-amazon-apigateway-integration":{uri:"arn:aws:apigateway:eu-central-1:lambda:path/2015-03-31/functions/arn:aws:lambda:eu-central-1:217109539042:function:fab_v1/invocations",httpMethod:"POST",type:"aws_proxy",passthroughBehavior:"when_no_match"},responses:{200:{description:"OK response.",content:{"application/json":{schema:{allOf:[{$ref:"#/components/schemas/ResponseBase"},{type:"object",properties:{data:{type:"object",properties:{productBoxTypes:{type:"array",items:{allOf:[{$ref:"#/components/schemas/ProductBoxType"},{type:"object",properties:{product:{$ref:"#/components/schemas/Product"}},required:["product"]}]}}},required:["productBoxTypes"]}},required:["data"]}]}}}},400:{$ref:"#/components/responses/ErrorResponseBadRequest"},401:{$ref:"#/components/responses/ErrorResponseUnauthorized"},403:{$ref:"#/components/responses/ErrorResponseForbidden"},408:{$ref:"#/components/responses/ErrorResponseRequestTimeout"},413:{$ref:"#/components/responses/ErrorResponsePayloadTooLarge"},429:{$ref:"#/components/responses/ErrorResponseTooManyRequests"},500:{$ref:"#/components/responses/ErrorResponseInternalServerError"},503:{$ref:"#/components/responses/ErrorResponseServiceUnavailable"}}}},"/product/box/create":{options:{operationId:"productBoxCreateOptions",responses:{200:{$ref:"#/components/responses/DefaultOptionsResponse"}},"x-amazon-apigateway-integration":{type:"mock",requestTemplates:{"application/json":`{"statusCode" : 200}
`},responses:{default:{statusCode:200,responseParameters:{"method.response.header.Access-Control-Allow-Headers":"'*'","method.response.header.Access-Control-Allow-Methods":"'OPTIONS'","method.response.header.Access-Control-Allow-Origin":"'*'"}}}}},post:{summary:"Create a product box.",operationId:"productBoxCreate",security:[{sigV4:[]}],"x-amazon-apigateway-integration":{uri:"arn:aws:apigateway:eu-central-1:lambda:path/2015-03-31/functions/arn:aws:lambda:eu-central-1:217109539042:function:fab_v1/invocations",httpMethod:"POST",type:"aws_proxy",passthroughBehavior:"when_no_match"},requestBody:{description:"Parameters for the product box creation.",required:!0,content:{"application/json":{schema:{type:"object",properties:{productSerials:{description:"Product serials to add to the product box.",type:"array",items:{$ref:"#/components/schemas/ProductSerial"}},productBoxTypeId:{description:"Identifier of the product box type.",type:"number",format:"int32",example:1}},required:["productSerials","productBoxTypeId"]}}}},responses:{200:{description:"OK response.",content:{"application/json":{schema:{allOf:[{$ref:"#/components/schemas/ResponseBase"},{type:"object",properties:{data:{type:"object",properties:{productBoxId:{type:"number",description:"Identifier of the product box.",example:1}},required:["productBoxId"]}},required:["data"]}]}}}},400:{$ref:"#/components/responses/ErrorResponseBadRequest"},401:{$ref:"#/components/responses/ErrorResponseUnauthorized"},403:{$ref:"#/components/responses/ErrorResponseForbidden"},408:{$ref:"#/components/responses/ErrorResponseRequestTimeout"},413:{$ref:"#/components/responses/ErrorResponsePayloadTooLarge"},429:{$ref:"#/components/responses/ErrorResponseTooManyRequests"},500:{$ref:"#/components/responses/ErrorResponseInternalServerError"},503:{$ref:"#/components/responses/ErrorResponseServiceUnavailable"}}}},"/product/box/get":{options:{operationId:"productBoxGetOptions",responses:{200:{$ref:"#/components/responses/DefaultOptionsResponse"}},"x-amazon-apigateway-integration":{type:"mock",requestTemplates:{"application/json":`{"statusCode" : 200}
`},responses:{default:{statusCode:200,responseParameters:{"method.response.header.Access-Control-Allow-Headers":"'*'","method.response.header.Access-Control-Allow-Methods":"'OPTIONS'","method.response.header.Access-Control-Allow-Origin":"'*'"}}}}},post:{summary:"Get a product box and its details.",operationId:"productBoxGet",security:[{sigV4:[]}],"x-amazon-apigateway-integration":{uri:"arn:aws:apigateway:eu-central-1:lambda:path/2015-03-31/functions/arn:aws:lambda:eu-central-1:217109539042:function:fab_v1/invocations",httpMethod:"POST",type:"aws_proxy",passthroughBehavior:"when_no_match"},requestBody:{description:"Parameters for product box selection.",required:!0,content:{"application/json":{schema:{type:"object",properties:{productSerial:{description:"Product serial.",type:"string",example:"0000020000000A"},productBoxId:{description:"Product box identifier.",type:"number",format:"int32",example:1}}}}}},responses:{200:{description:"OK response.",content:{"application/json":{schema:{allOf:[{$ref:"#/components/schemas/ResponseBase"},{type:"object",properties:{data:{type:"object",properties:{productBox:{type:"object",properties:{id:{type:"number",format:"int32",description:"Identifier of the product box.",example:1},type:{type:"object",properties:{id:{type:"number",format:"int32",description:"Identifier of the product box type.",example:1}},required:["id"]},device:{type:"object",properties:{productSerials:{type:"array",description:"List of product serials contained in the product box.",items:{$ref:"#/components/schemas/ProductSerial"}}},required:["productSerials"]},logisticsBox:{type:"object",properties:{id:{type:"number",description:"Identifier of the logistics box.",example:1},type:{type:"object",properties:{id:{type:"number",description:"Identifier of the logistics box type.",example:1}},required:["id"]}},required:["id"]}},required:["id","type","device"]}},required:["productBox"]}},required:["data"]}]}}}},400:{$ref:"#/components/responses/ErrorResponseBadRequest"},401:{$ref:"#/components/responses/ErrorResponseUnauthorized"},403:{$ref:"#/components/responses/ErrorResponseForbidden"},408:{$ref:"#/components/responses/ErrorResponseRequestTimeout"},413:{$ref:"#/components/responses/ErrorResponsePayloadTooLarge"},429:{$ref:"#/components/responses/ErrorResponseTooManyRequests"},500:{$ref:"#/components/responses/ErrorResponseInternalServerError"},503:{$ref:"#/components/responses/ErrorResponseServiceUnavailable"}}}},"/product/list":{options:{operationId:"productListOptions",responses:{200:{$ref:"#/components/responses/DefaultOptionsResponse"}},"x-amazon-apigateway-integration":{type:"mock",requestTemplates:{"application/json":`{"statusCode" : 200}
`},responses:{default:{statusCode:200,responseParameters:{"method.response.header.Access-Control-Allow-Headers":"'*'","method.response.header.Access-Control-Allow-Methods":"'OPTIONS'","method.response.header.Access-Control-Allow-Origin":"'*'"}}}}},post:{summary:"Get the list of products.",operationId:"productList",security:[{sigV4:[]}],"x-amazon-apigateway-integration":{uri:"arn:aws:apigateway:eu-central-1:lambda:path/2015-03-31/functions/arn:aws:lambda:eu-central-1:217109539042:function:fab_v1/invocations",httpMethod:"POST",type:"aws_proxy",passthroughBehavior:"when_no_match"},requestBody:{description:"Parameters for filters on the product list.",required:!0,content:{"application/json":{schema:{type:"object",properties:{productTypeId:{description:"Identifier a product type for which to filter the products.",type:"integer",format:"int32"}}}}}},responses:{200:{description:"OK response.",content:{"application/json":{schema:{allOf:[{$ref:"#/components/schemas/ResponseBase"},{type:"object",properties:{data:{type:"object",properties:{products:{type:"array",items:{allOf:[{$ref:"#/components/schemas/Product"},{type:"object",properties:{type:{$ref:"#/components/schemas/ProductType"},provisionMode:{$ref:"#/components/schemas/ProductProvisionMode"}},required:["type","provisionMode"]}]}}},required:["products"]}},required:["data"]}]}}}},400:{$ref:"#/components/responses/ErrorResponseBadRequest"},401:{$ref:"#/components/responses/ErrorResponseUnauthorized"},403:{$ref:"#/components/responses/ErrorResponseForbidden"},408:{$ref:"#/components/responses/ErrorResponseRequestTimeout"},413:{$ref:"#/components/responses/ErrorResponsePayloadTooLarge"},429:{$ref:"#/components/responses/ErrorResponseTooManyRequests"},500:{$ref:"#/components/responses/ErrorResponseInternalServerError"},503:{$ref:"#/components/responses/ErrorResponseServiceUnavailable"}}}},"/product/provisionMode/list":{options:{operationId:"productProvisionModeListOptions",responses:{200:{$ref:"#/components/responses/DefaultOptionsResponse"}},"x-amazon-apigateway-integration":{type:"mock",requestTemplates:{"application/json":`{"statusCode" : 200}
`},responses:{default:{statusCode:200,responseParameters:{"method.response.header.Access-Control-Allow-Headers":"'*'","method.response.header.Access-Control-Allow-Methods":"'OPTIONS'","method.response.header.Access-Control-Allow-Origin":"'*'"}}}}},post:{summary:"Get the list of product provision modes.",operationId:"productProvisionModeList",security:[{sigV4:[]}],"x-amazon-apigateway-integration":{uri:"arn:aws:apigateway:eu-central-1:lambda:path/2015-03-31/functions/arn:aws:lambda:eu-central-1:217109539042:function:fab_v1/invocations",httpMethod:"POST",type:"aws_proxy",passthroughBehavior:"when_no_match"},responses:{200:{description:"OK response.",content:{"application/json":{schema:{allOf:[{$ref:"#/components/schemas/ResponseBase"},{type:"object",properties:{data:{type:"object",properties:{productProvisionModes:{type:"array",items:{allOf:[{$ref:"#/components/schemas/ProductProvisionMode"},{type:"object",properties:{description:{type:"string",description:"Description of the product provision mode.",example:"The product provisioning is performed automatically."}}}]}}},required:["productProvisionModes"]}},required:["data"]}]}}}},400:{$ref:"#/components/responses/ErrorResponseBadRequest"},401:{$ref:"#/components/responses/ErrorResponseUnauthorized"},403:{$ref:"#/components/responses/ErrorResponseForbidden"},408:{$ref:"#/components/responses/ErrorResponseRequestTimeout"},413:{$ref:"#/components/responses/ErrorResponsePayloadTooLarge"},429:{$ref:"#/components/responses/ErrorResponseTooManyRequests"},500:{$ref:"#/components/responses/ErrorResponseInternalServerError"},503:{$ref:"#/components/responses/ErrorResponseServiceUnavailable"}}}},"/product/type/list":{options:{operationId:"productTypeListOptions",responses:{200:{$ref:"#/components/responses/DefaultOptionsResponse"}},"x-amazon-apigateway-integration":{type:"mock",requestTemplates:{"application/json":`{"statusCode" : 200}
`},responses:{default:{statusCode:200,responseParameters:{"method.response.header.Access-Control-Allow-Headers":"'*'","method.response.header.Access-Control-Allow-Methods":"'OPTIONS'","method.response.header.Access-Control-Allow-Origin":"'*'"}}}}},post:{summary:"Get the list of product types.",operationId:"productTypeList",security:[{sigV4:[]}],"x-amazon-apigateway-integration":{uri:"arn:aws:apigateway:eu-central-1:lambda:path/2015-03-31/functions/arn:aws:lambda:eu-central-1:217109539042:function:fab_v1/invocations",httpMethod:"POST",type:"aws_proxy",passthroughBehavior:"when_no_match"},responses:{200:{description:"OK response.",content:{"application/json":{schema:{allOf:[{$ref:"#/components/schemas/ResponseBase"},{type:"object",properties:{data:{type:"object",properties:{productTypes:{type:"array",items:{allOf:[{$ref:"#/components/schemas/ProductType"},{type:"object",properties:{description:{type:"string",description:"Description of the product type.",example:"Micro inverter."}}}]}}},required:["productTypes"]}},required:["data"]}]}}}},400:{$ref:"#/components/responses/ErrorResponseBadRequest"},401:{$ref:"#/components/responses/ErrorResponseUnauthorized"},403:{$ref:"#/components/responses/ErrorResponseForbidden"},408:{$ref:"#/components/responses/ErrorResponseRequestTimeout"},413:{$ref:"#/components/responses/ErrorResponsePayloadTooLarge"},429:{$ref:"#/components/responses/ErrorResponseTooManyRequests"},500:{$ref:"#/components/responses/ErrorResponseInternalServerError"},503:{$ref:"#/components/responses/ErrorResponseServiceUnavailable"}}}},"/product/variant/create":{options:{operationId:"productVariantCreateOptions",responses:{200:{$ref:"#/components/responses/DefaultOptionsResponse"}},"x-amazon-apigateway-integration":{type:"mock",requestTemplates:{"application/json":`{"statusCode" : 200}
`},responses:{default:{statusCode:200,responseParameters:{"method.response.header.Access-Control-Allow-Headers":"'*'","method.response.header.Access-Control-Allow-Methods":"'OPTIONS'","method.response.header.Access-Control-Allow-Origin":"'*'"}}}}},post:{summary:"Create a product variant.",operationId:"productVariantCreate",security:[{sigV4:[]}],"x-amazon-apigateway-integration":{uri:"arn:aws:apigateway:eu-central-1:lambda:path/2015-03-31/functions/arn:aws:lambda:eu-central-1:217109539042:function:fab_v1/invocations",httpMethod:"POST",type:"aws_proxy",passthroughBehavior:"when_no_match"},requestBody:{description:"Parameters for product variant creation.",required:!0,content:{"application/json":{schema:{type:"object",properties:{productId:{description:"Identifier a product for which the product variant is created.",type:"integer",format:"int32"},version:{type:"string",description:"Version code used for the device label. It consists of two components. The first component is a digit that represents the generation starting at one. The second component is a digit that represents the version of the generation, starting at zero.",example:10},erpMaterialNumber:{type:"string",example:"100543-00",description:"Material number as per the ERP that this product variant references."},remarks:{type:"string",description:"Remarks for that product variant.",example:"Inverter JT350 rev. 2"}},required:["productId"]}}}},responses:{200:{description:"OK response.",content:{"application/json":{schema:{allOf:[{$ref:"#/components/schemas/ResponseBase"},{type:"object",properties:{data:{type:"object",properties:{productVariant:{type:"object",properties:{id:{type:"number",format:"int32",description:"Identifier of the product variant.",example:1}},required:["id"]}},required:["productVariant"]}},required:["data"]}]}}}},400:{$ref:"#/components/responses/ErrorResponseBadRequest"},401:{$ref:"#/components/responses/ErrorResponseUnauthorized"},403:{$ref:"#/components/responses/ErrorResponseForbidden"},408:{$ref:"#/components/responses/ErrorResponseRequestTimeout"},413:{$ref:"#/components/responses/ErrorResponsePayloadTooLarge"},429:{$ref:"#/components/responses/ErrorResponseTooManyRequests"},500:{$ref:"#/components/responses/ErrorResponseInternalServerError"},503:{$ref:"#/components/responses/ErrorResponseServiceUnavailable"}}}},"/product/variant/list":{options:{operationId:"productVariantListOptions",responses:{200:{$ref:"#/components/responses/DefaultOptionsResponse"}},"x-amazon-apigateway-integration":{type:"mock",requestTemplates:{"application/json":`{"statusCode" : 200}
`},responses:{default:{statusCode:200,responseParameters:{"method.response.header.Access-Control-Allow-Headers":"'*'","method.response.header.Access-Control-Allow-Methods":"'OPTIONS'","method.response.header.Access-Control-Allow-Origin":"'*'"}}}}},post:{summary:"Get the list of product variants grouped by product.",operationId:"productVariantList",security:[{sigV4:[]}],"x-amazon-apigateway-integration":{uri:"arn:aws:apigateway:eu-central-1:lambda:path/2015-03-31/functions/arn:aws:lambda:eu-central-1:217109539042:function:fab_v1/invocations",httpMethod:"POST",type:"aws_proxy",passthroughBehavior:"when_no_match"},requestBody:{description:"Parameters for filters on the product variant list. At least one parameter must be specified. Parameters `productVariantIds` and `erpMaterialNumber` are mutually exclusive.",required:!0,content:{"application/json":{schema:{type:"object",properties:{productId:{description:"Identifier a product for which to list the product variants.",type:"integer",format:"int32"},productVariantIds:{type:"array",items:{type:"number",format:"int32",example:1},description:"Product variant identifiers for which to list the product variants."},erpMaterialNumbers:{type:"array",items:{type:"string",example:"100543-00"},description:"Material numbers as per the ERP for which to list the product variants."}}}}}},responses:{200:{description:"OK response.",content:{"application/json":{schema:{allOf:[{$ref:"#/components/schemas/ResponseBase"},{type:"object",properties:{data:{type:"object",properties:{products:{type:"array",items:{allOf:[{$ref:"#/components/schemas/Product"},{type:"object",properties:{type:{$ref:"#/components/schemas/ProductType"},provisionMode:{$ref:"#/components/schemas/ProductProvisionMode"},variants:{type:"array",items:{allOf:[{$ref:"#/components/schemas/ProductVariant"},{type:"object",properties:{creationTimeStamp:{type:"string",format:"date-time",description:"Timestamp of the product variant creation as ISO 8601 formatted string."}},required:["creationTimeStamp"]}]}}},required:["type","provisionMode","variants"]}]}}},required:["products"]}},required:["data"]}]}}}},400:{$ref:"#/components/responses/ErrorResponseBadRequest"},401:{$ref:"#/components/responses/ErrorResponseUnauthorized"},403:{$ref:"#/components/responses/ErrorResponseForbidden"},408:{$ref:"#/components/responses/ErrorResponseRequestTimeout"},413:{$ref:"#/components/responses/ErrorResponsePayloadTooLarge"},429:{$ref:"#/components/responses/ErrorResponseTooManyRequests"},500:{$ref:"#/components/responses/ErrorResponseInternalServerError"},503:{$ref:"#/components/responses/ErrorResponseServiceUnavailable"}}}},"/product/variant/modify":{options:{operationId:"productVarianModifyOptions",responses:{200:{$ref:"#/components/responses/DefaultOptionsResponse"}},"x-amazon-apigateway-integration":{type:"mock",requestTemplates:{"application/json":`{"statusCode" : 200}
`},responses:{default:{statusCode:200,responseParameters:{"method.response.header.Access-Control-Allow-Headers":"'*'","method.response.header.Access-Control-Allow-Methods":"'OPTIONS'","method.response.header.Access-Control-Allow-Origin":"'*'"}}}}},post:{summary:"Modify a product variant.",operationId:"productVariantModify",security:[{sigV4:[]}],"x-amazon-apigateway-integration":{uri:"arn:aws:apigateway:eu-central-1:lambda:path/2015-03-31/functions/arn:aws:lambda:eu-central-1:217109539042:function:fab_v1/invocations",httpMethod:"POST",type:"aws_proxy",passthroughBehavior:"when_no_match"},requestBody:{description:"Parameters for product variant modification.",required:!0,content:{"application/json":{schema:{type:"object",properties:{productVariantId:{description:"Identifier a product variant that is to be modified.",type:"integer",format:"int32"},version:{type:"string",description:"Version code used for the device label. It consists of two components. The first component is a digit that represents the generation starting at one. The second component is a digit that represents the version of the generation, starting at zero.",example:10},erpMaterialNumber:{type:"string",example:"100543-00",description:"Material number as per the ERP that this product variant references."},remarks:{type:"string",description:"Remarks for that product variant.",example:"Inverter JT350 rev. 2"}},required:["productVariantId"]}}}},responses:{200:{description:"OK response.",content:{"application/json":{schema:{allOf:[{$ref:"#/components/schemas/ResponseBase"},{type:"object",properties:{data:{type:"object",properties:{productVariant:{type:"object",properties:{id:{type:"number",format:"int32",description:"Identifier of the product variant.",example:1}},required:["id"]}},required:["productVariant"]}},required:["data"]}]}}}},400:{$ref:"#/components/responses/ErrorResponseBadRequest"},401:{$ref:"#/components/responses/ErrorResponseUnauthorized"},403:{$ref:"#/components/responses/ErrorResponseForbidden"},408:{$ref:"#/components/responses/ErrorResponseRequestTimeout"},413:{$ref:"#/components/responses/ErrorResponsePayloadTooLarge"},429:{$ref:"#/components/responses/ErrorResponseTooManyRequests"},500:{$ref:"#/components/responses/ErrorResponseInternalServerError"},503:{$ref:"#/components/responses/ErrorResponseServiceUnavailable"}}}},"/qa/inverterEfficiencyTest":{options:{operationId:"qaInverterEfficiencyTestOptions",responses:{200:{$ref:"#/components/responses/DefaultOptionsResponse"}},"x-amazon-apigateway-integration":{type:"mock",requestTemplates:{"application/json":`{"statusCode" : 200}
`},responses:{default:{statusCode:200,responseParameters:{"method.response.header.Access-Control-Allow-Headers":"'*'","method.response.header.Access-Control-Allow-Methods":"'OPTIONS'","method.response.header.Access-Control-Allow-Origin":"'*'"}}}}},post:{summary:"Store results for production inverter efficiency tests.",operationId:"qaInverterEfficiencyTest",security:[{sigV4:[]}],"x-amazon-apigateway-integration":{uri:"arn:aws:apigateway:eu-central-1:lambda:path/2015-03-31/functions/arn:aws:lambda:eu-central-1:217109539042:function:fab_v1/invocations",httpMethod:"POST",type:"aws_proxy",passthroughBehavior:"when_no_match"},requestBody:{description:"Parameters of the test results.",required:!0,content:{"application/json":{schema:{type:"object",properties:{productSerial:{description:"The unique identifier of the device composed of the product code and serial number represented and serialized as string.",type:"string",example:"00000300002T5M"},status:{description:"The status of the test.",type:"string",enum:["ok","failed"],example:"ok"},results:{type:"object",properties:{vac:{type:"number",format:"float",description:"Voltage AC",example:230},vdc:{type:"number",format:"float",description:"Voltage DC",example:40},iac:{type:"number",format:"float",description:"Current AC",example:1.6},idc:{type:"number",format:"float",description:"Current DC",example:9},epc:{type:"number",format:"float",description:"Efficiency percent",example:98},pac:{type:"number",format:"float",description:"Power AC",example:300},phi:{type:"number",format:"float",description:"Power phase angle",example:180},pfc:{type:"number",format:"float",description:"Power factor",example:1},sap:{type:"number",format:"float",description:"Apparent power (Scheinleistung)",example:300}},required:["vac","vdc","iac","idc","epc","pac","phi","pfc","sap"]}},required:["productSerial","status","results"]}}}},responses:{200:{description:"OK response.",content:{"application/json":{schema:{allOf:[{$ref:"#/components/schemas/ResponseBase"},{type:"object",properties:{data:{type:"object"}},required:["data"]}]}}}},400:{$ref:"#/components/responses/ErrorResponseBadRequest"},401:{$ref:"#/components/responses/ErrorResponseUnauthorized"},403:{$ref:"#/components/responses/ErrorResponseForbidden"},408:{$ref:"#/components/responses/ErrorResponseRequestTimeout"},413:{$ref:"#/components/responses/ErrorResponsePayloadTooLarge"},429:{$ref:"#/components/responses/ErrorResponseTooManyRequests"},500:{$ref:"#/components/responses/ErrorResponseInternalServerError"},503:{$ref:"#/components/responses/ErrorResponseServiceUnavailable"}}}},"/tag/create":{options:{operationId:"createTagOptions",responses:{200:{$ref:"#/components/responses/DefaultOptionsResponse"}},"x-amazon-apigateway-integration":{type:"mock",requestTemplates:{"application/json":`{"statusCode" : 200}
`},responses:{default:{statusCode:200,responseParameters:{"method.response.header.Access-Control-Allow-Headers":"'*'","method.response.header.Access-Control-Allow-Methods":"'OPTIONS'","method.response.header.Access-Control-Allow-Origin":"'*'"}}}}},post:{summary:"Create a tag.",operationId:"createTag",security:[{sigV4:[]}],"x-amazon-apigateway-integration":{uri:"arn:aws:apigateway:eu-central-1:lambda:path/2015-03-31/functions/arn:aws:lambda:eu-central-1:217109539042:function:fab_v1/invocations",httpMethod:"POST",type:"aws_proxy",passthroughBehavior:"when_no_match"},requestBody:{description:"Parameters for the tag creation.",required:!0,content:{"application/json":{schema:{type:"object",properties:{name:{type:"string",description:"Name of the tag.",example:"DEVELOPMENT"},description:{type:"string",description:"Description of the tag.",example:"Tag for devices to mark them as device under development."}},required:["name","description"]}}}},responses:{200:{description:"OK response.",content:{"application/json":{schema:{allOf:[{$ref:"#/components/schemas/ResponseBase"},{type:"object",properties:{data:{type:"object",properties:{tag:{type:"object",properties:{id:{type:"number",format:"int32",description:"Identifier of the tag.",example:1}},required:["id"]}},required:["tag"]}},required:["data"]}]}}}},400:{$ref:"#/components/responses/ErrorResponseBadRequest"},401:{$ref:"#/components/responses/ErrorResponseUnauthorized"},403:{$ref:"#/components/responses/ErrorResponseForbidden"},408:{$ref:"#/components/responses/ErrorResponseRequestTimeout"},413:{$ref:"#/components/responses/ErrorResponsePayloadTooLarge"},429:{$ref:"#/components/responses/ErrorResponseTooManyRequests"},500:{$ref:"#/components/responses/ErrorResponseInternalServerError"},503:{$ref:"#/components/responses/ErrorResponseServiceUnavailable"}}}},"/tag/list":{options:{operationId:"getTagListOptions",responses:{200:{$ref:"#/components/responses/DefaultOptionsResponse"}},"x-amazon-apigateway-integration":{type:"mock",requestTemplates:{"application/json":`{"statusCode" : 200}
`},responses:{default:{statusCode:200,responseParameters:{"method.response.header.Access-Control-Allow-Headers":"'*'","method.response.header.Access-Control-Allow-Methods":"'OPTIONS'","method.response.header.Access-Control-Allow-Origin":"'*'"}}}}},post:{summary:"Get a list of tags.",operationId:"getTagList",security:[{sigV4:[]}],"x-amazon-apigateway-integration":{uri:"arn:aws:apigateway:eu-central-1:lambda:path/2015-03-31/functions/arn:aws:lambda:eu-central-1:217109539042:function:fab_v1/invocations",httpMethod:"POST",type:"aws_proxy",passthroughBehavior:"when_no_match"},responses:{200:{description:"OK response.",content:{"application/json":{schema:{allOf:[{$ref:"#/components/schemas/ResponseBase"},{type:"object",properties:{data:{type:"object",properties:{tags:{type:"array",items:{allOf:[{$ref:"#/components/schemas/Tag"},{type:"object",properties:{description:{type:"string",description:"Description of the tag.",example:"Tag for devices to mark them as device under development."},usage:{type:"object",description:"Entities to which the tag applies to.",properties:{devices:{type:"number",format:"int32",description:"Number of devices the tag applies to.",example:253}},required:["devices"]},creationTimeStamp:{type:"string",format:"date-time",description:"Timestamp of the tag creation as ISO 8601 formatted string."}},required:["usage","creationTimeStamp"]}]}}},required:["tags"]}},required:["data"]}]}}}},400:{$ref:"#/components/responses/ErrorResponseBadRequest"},401:{$ref:"#/components/responses/ErrorResponseUnauthorized"},403:{$ref:"#/components/responses/ErrorResponseForbidden"},408:{$ref:"#/components/responses/ErrorResponseRequestTimeout"},413:{$ref:"#/components/responses/ErrorResponsePayloadTooLarge"},429:{$ref:"#/components/responses/ErrorResponseTooManyRequests"},500:{$ref:"#/components/responses/ErrorResponseInternalServerError"},503:{$ref:"#/components/responses/ErrorResponseServiceUnavailable"}}}}},components:{securitySchemes:{sigV4:{type:"apiKey",name:"Authorization",in:"header","x-amazon-apigateway-authtype":"awsSigv4"}},responses:{DefaultOptionsResponse:{description:"Default options response",headers:{"Access-Control-Allow-Headers":{schema:{type:"string"}},"Access-Control-Allow-Methods":{schema:{type:"string"}},"Access-Control-Allow-Origin":{schema:{type:"string"}}}},ErrorResponseBadRequest:{description:"Bad request error response",content:{"application/json":{schema:{allOf:[{$ref:"#/components/schemas/ErrorResponseBase"},{type:"object",properties:{meta:{type:"object",properties:{code:{example:400}}}}}]}}}},ErrorResponseUnauthorized:{description:"Unauthorized error response",content:{"application/json":{schema:{allOf:[{$ref:"#/components/schemas/ErrorResponseBase"},{type:"object",properties:{meta:{type:"object",properties:{code:{example:401}}}}}]}}}},ErrorResponseForbidden:{description:"Forbidden error response",content:{"application/json":{schema:{allOf:[{$ref:"#/components/schemas/ErrorResponseBase"},{type:"object",properties:{meta:{type:"object",properties:{code:{example:403}}}}}]}}}},ErrorResponseRequestTimeout:{description:"Request timeout error response",content:{"application/json":{schema:{allOf:[{$ref:"#/components/schemas/ErrorResponseBase"},{type:"object",properties:{meta:{type:"object",properties:{code:{example:408}}}}}]}}}},ErrorResponsePayloadTooLarge:{description:"Payload too large error response",content:{"application/json":{schema:{allOf:[{$ref:"#/components/schemas/ErrorResponseBase"},{type:"object",properties:{meta:{type:"object",properties:{code:{example:413}}}}}]}}}},ErrorResponseTooManyRequests:{description:"Too many requests error response",content:{"application/json":{schema:{allOf:[{$ref:"#/components/schemas/ErrorResponseBase"},{type:"object",properties:{meta:{type:"object",properties:{code:{example:413}}}}}]}}}},ErrorResponseInternalServerError:{description:"Internal server error response",content:{"application/json":{schema:{allOf:[{$ref:"#/components/schemas/ErrorResponseBase"},{type:"object",properties:{meta:{type:"object",properties:{code:{example:500}}}}}]}}}},ErrorResponseServiceUnavailable:{description:"Service unavailable error response",content:{"application/json":{schema:{allOf:[{$ref:"#/components/schemas/ErrorResponseBase"},{type:"object",properties:{meta:{type:"object",properties:{code:{example:503}}}}}]}}}}},schemas:{CreationTimeStamp:{type:"string",format:"date-time",description:"Creation date and time."},DataMatrixCode:{type:"string",description:"Data matrix code as foreign identifier as placed on the PCB of each device.",example:"0000000000000137"},DeviceHash:{type:"string",description:"Unique hash of the device used for authentication.",example:"0000018abe0020095f1123f5e20"},LatestContact:{type:"string",format:"date-time",description:"Date and time of the latest contact with the device."},ProductCode:{type:"integer",format:"int32",description:"Code that identifies a product. It is part of the product serial and product serial id.",example:2},ProductSerial:{type:"string",description:"Unique identifier of the device. The value is the combination of product code and serial number represented as a string.",example:"000002000028TT"},ProductSerialId:{type:"integer",format:"int64",description:"Unique identifier of the device. The value is the combination of product code and serial number represented as an integer.",example:8590023393},ParentProductSerial:{allOf:[{$ref:"#/components/schemas/ProductSerial"},{description:"Unique identifier of the parent device."}]},SerialNumber:{type:"integer",format:"int32",description:"Serial number of the device with regards to the product code.",example:88801},MessageStatistics:{type:"array",description:"Message statistics of the device.",items:{type:"object",properties:{date:{type:"string",format:"date",description:'Date with format "YYYY-MM-DD" using UTC as time zone.'},updates:{type:"number",format:"int32",description:'Number of updates during the period specified by attribute "date".',example:517}}}},Address:{type:"object",properties:{streetName:{type:"string",description:"Street name"},houseNumber:{type:"string",description:"House number"},additionalInfo:{type:"string",description:"Additional address information"},zipCode:{type:"string",description:"ZIP code"},city:{type:"string",description:"City"},countryCode:{type:"string",description:"Country code (ISO 3166-1 alpha-2)"}}},Certificates:{type:"object",properties:{cert:{format:"string",description:"Public certificate in the form of a base64 encoded string."},key:{format:"string",description:"Private key in the form of a base64 encoded string."},ca:{format:"string",description:"Certificate authority for the public and private certificates in the form of a base64 encoded string."}},required:["cert","key","ca"]},DeviceStatus:{type:"object",properties:{id:{type:"integer",format:"int32",description:"Identifier of the status of the device.",example:4},name:{type:"string",description:"Name of the status of the device.",example:"Operable"}},required:["id","name"]},FirmwareReleaseType:{type:"object",properties:{id:{type:"integer",format:"int32",description:"Identifier of the firmware release type.",example:2},name:{type:"string",description:"The name of the firmware release type.",example:"PRODUCTION"}},required:["id","name"]},FirmwareFileType:{type:"object",properties:{id:{type:"integer",format:"int32",description:"Identifier of the firmware file type.",example:4},name:{type:"string",description:"The name of the firmware file type.",example:"App"},encoding:{type:"string",description:"The encoding for the firmware file type.",enum:["BINARY","UTF8"],example:"BINARY"}},required:["id","name","encoding"]},FirmwareReleaseBase:{type:"object",properties:{id:{type:"integer",format:"int32",description:"Identifier of the firmware release.",example:5},tag:{type:"string",description:"Tag of the firmware release.",example:"v1.0.2-beta3"}},required:["id","tag"]},FirmwareRelease:{allOf:[{$ref:"#/components/schemas/FirmwareReleaseBase"},{type:"object",properties:{remarks:{type:"string",description:"Remarks regarding the firmware release."},creationTimeStamp:{type:"string",format:"date-time",description:"Timestamp of the firmware release creation as ISO 8601 formatted string."}},required:["creationTimeStamp"]}]},Firmware:{type:"object",properties:{id:{type:"integer",format:"int32",description:"The identifier of the firmware."},name:{type:"string",description:"The name of the firmware.",example:"IntelliGate Balcony v1"},description:{type:"string",description:"The description of the firmware.",example:"First generation of the firmware for the IntelliGate Balcony."},product:{$ref:"#/components/schemas/Product"},fileTypes:{type:"array",items:{$ref:"#/components/schemas/FirmwareFileType"}}},required:["id","name","product","fileTypes"]},MicroGatewayAttributes:{type:"object",properties:{wifiPassword:{type:"string",description:"Password of the micro gateway wifi."},certificates:{$ref:"#/components/schemas/Certificates"},deviceFirmwareKey:{type:"string",description:"Device-specific firmware encryption key represented as base64 encoded string."}},required:["wifiPassword","certificates"]},ProductBoxType:{type:"object",properties:{id:{type:"number",format:"int32",description:"Identifier of the product box type.",example:1},numberUnits:{type:"number",format:"int32",description:"Number of units in the product box.",example:1},GTIN:{type:"string",description:"GTIN of the product.",example:"4262447910052"},articleNumber:{type:"string",description:"Article number of the product.",example:"PSB-1PK-10"}},required:["id","numberUnits","GTIN","articleNumber"]},ProductProvisionMode:{type:"object",properties:{id:{type:"integer",format:"int32",description:"The identifier of the provision mode for this product.",example:2},name:{type:"string",description:"The name of the provision mode for this product.",example:"automatic"}},required:["id","name"]},ProductVariant:{type:"object",properties:{id:{type:"integer",format:"int32",description:"Internal identifier of the product variant",example:1},version:{type:"string",description:"Version code used for the device label. It consists of two components. The first component is a digit that represents the generation starting at one. The second component is a digit that represents the version of the generation, starting at zero.",example:10},erpMaterialNumber:{type:"string",description:"Material number as per the ERP. Either provide this parameter or provide `productVariantId`.",example:"100543-00"},remarks:{type:"string",description:"Remarks for that product variant.",example:"Inverter JT350 rev. 2"}},required:["id","version"]},ProductType:{type:"object",properties:{id:{type:"integer",format:"int32",description:"The identifier of the product type.",example:2},name:{type:"string",description:"The name of the product type.",example:"inverter"}},required:["id","name"]},Product:{type:"object",properties:{id:{type:"integer",format:"int32",description:"The identifier of the product.",example:1},productCode:{type:"integer",format:"int32",description:"Code that identifies a product. This identifier is used in the factory by the assembly line, by the ERP and by the device firmware for communication. It is also part of the product serial and product serial id.",example:2},name:{type:"string",description:"The name of the product.",example:"PowerStick Balcony 350"},model:{type:"string",description:"The model of the product used for the device label.",example:"PSB-350"}},required:["id","productCode","name","model"]},Tag:{type:"object",properties:{id:{type:"number",format:"int32",description:"Identifier of the tag.",example:1},name:{type:"string",description:"Name of the tag.",example:"DEVELOPMENT"}},required:["id","name"]},RequestCursorPagination:{type:"object",properties:{meta:{type:"object",properties:{pagination:{type:"object",properties:{limit:{type:"number",format:"int32",description:"Number of entities to limit the result set to.",example:100},cursorValue:{type:"string",description:"Cursor value that specifies the part of the result set to obtain. Valid values are returned by the pagination attributes `cursorNext` and `cursorPrevious`.",example:"AA+BB+BAA"}},required:["limit"]}},required:["pagination"]}}},ResponseBase:{type:"object",properties:{data:{type:"object"},meta:{type:"object",description:"The response meta represents a section with meta information available on every response.",properties:{code:{type:"integer",format:"int32",description:"The response code.",example:200}},required:["code"]}},required:["meta"]},ResponseCursorPagination:{type:"object",properties:{meta:{type:"object",properties:{pagination:{type:"object",properties:{cursorNext:{type:"string",description:"Cursor for the subsequent page of the result set.",example:"AA+BB+BAA"},cursorPrevious:{type:"string",description:"Cursor for the previous page of the result set.",example:"AA+BB+BAB"}}}},required:["pagination"]}},required:["meta"]},ErrorResponseBase:{allOf:[{$ref:"#/components/schemas/ResponseBase"},{type:"object",properties:{data:{type:"object",properties:{message:{type:"string",description:"Human readable error message"},id:{type:"string",description:"Identifier of the error"}},required:["message","id"]}},required:["data"]}]}}}};function W(o,s){var n,b,g,u,e,t,r,i,p,a,c;return(c=(((a=(p=(((i=(r=(t=(e=(u=(g=(b=(n=T==null?void 0:T.paths)==null?void 0:n[o])==null?void 0:b.post)==null?void 0:g.responses)==null?void 0:u[200])==null?void 0:e.content)==null?void 0:t["application/json"])==null?void 0:r.schema)==null?void 0:i.allOf)??[]).find(B=>B.type==="object").properties)==null?void 0:p.data)==null?void 0:a.properties)??{})[s])==null?void 0:c.description}function A(o){return/^\d+\.\d+$/.test((o==null?void 0:o.toString())??"")}function Z(o,s=3){return A(o)?Number(o).toFixed(s):o}const Y={key:0,class:"debug-table-wrapper"},X={key:1,class:"ion-padding"},Q=w("p",{class:"ion-text-center"},"No data found",-1),ne=C({__name:"queryDebugTable",props:{data:{type:Object,default:null},variant:{type:String,required:!0}},setup(o){const s=o,l=z(()=>s.data),h=U(),n={gateway:{timestamp:{tooltip:e=>`${e.timestamp} ms since epoch`,dataFormat:e=>S(new Date(e.timestamp))},inverterExport:{unit:" Wh",precision:5},uptime:{tooltip:e=>`${e.uptime} μs`,dataFormat:e=>O(parseInt(e.uptime)/1e3)},temp:{tooltip:e=>`${e.temp}°C`,dataFormat:e=>`${parseFloat(e.temp).toFixed(2)}°C`},firmwareHash:{},ram:{tooltip:e=>`${e.ram} B`,dataFormat:e=>`${(parseFloat(e.ram)/1024).toFixed(2)} KiB`},reboot:{tooltip:e=>`Code: ${e.reboot}`,dataFormat:e=>{switch(e.reboot){case 1:return"unknown";case 2:return"power on";case 3:return"external pin";case 4:return"software";case 5:return"panic";case 6:return"interrupt watchdog";case 7:return"task watchdog";case 8:return"other watchdogs";case 9:return"deep sleep";case 10:return"brownout";case 11:return"SDIO";case 12:return"USB peripheral";case 13:return"JTAG";default:return`Invalid reason (${e.reboot})`}}},ssid:{},bssid:{},rssi:{unit:" dBm"},ip:{},subnet:{},gateway:{}},inverter:{timestamp:{tooltip:e=>`${e.timestamp} ms since epoch`,dataFormat:e=>S(new Date(e.timestamp))},w:{unit:" W",precision:2},runtime:{tooltip:e=>`${e.runtime} ms`,dataFormat:e=>O(parseInt(e.runtime))},whruntime:{unit:" Wh",precision:2},dcv:{unit:" V",precision:4},fgrid:{precision:4},phvpha:{unit:" V",precision:4},iline:{},tmpot:{tooltip:e=>`${e.tmpot}°K`,dataFormat:e=>`${(parseFloat(e.tmpot)-273.15).toFixed(2)}°C`},status:{tooltip:e=>`As integer: ${e.status}`,dataFormat:e=>(parseInt(e.status)>>>0).toString(2).padStart(16,"0").replace(/\d{4}(?=.)/g,"$& ")},vref:{precision:4},vbias:{},trecl:{},tramp:{},spare1:{},spare2:{}},default:{tooltip:(e,t)=>A(e[t])?e[t]:void 0,dataFormat:(e,t,r)=>Z(e[t],r)}};function b(e,t){var p,a,c;if(e[t]===null)return;const r=(p=n[s.variant])==null?void 0:p[t],i=((a=r==null?void 0:r.tooltip)==null?void 0:a.call(r,e))??n.default.tooltip(e,t);return typeof i=="object"?i:(c=i==null?void 0:i.toString())==null?void 0:c.concat((r==null?void 0:r.unit)??"")}function g(e,t){var i,p,a,c;if(e[t]===null)return;const r=(i=n[s.variant])==null?void 0:i[t];return(c=(a=((p=r==null?void 0:r.dataFormat)==null?void 0:p.call(r,e))??n.default.dataFormat(e,t,(r==null?void 0:r.precision)??3))==null?void 0:a.toString())==null?void 0:c.concat((r==null?void 0:r.unit)??"")}function u(){var e;if(h.value){const t=h.value.getBoundingClientRect().top,r=parseFloat(getComputedStyle(h.value).getPropertyValue("--scroll-top").slice(0,-2)||"0");(e=h.value)==null||e.style.setProperty("--scroll-initial-offset",`${t+r}px`)}}return L(()=>{E(u)}),k(()=>{E(u),K(u,1e3)}),(e,t)=>{var p;const r=H,i=P("tooltip");return(p=y(l))!=null&&p.length?(d(),m("div",Y,[w("table",{class:"debug-table",ref_key:"tableRef",ref:h},[w("tr",null,[(d(!0),m(R,null,$(Object.keys(n[o.variant]),a=>(d(),m("th",null,[x((d(),m("span",null,[v(q(a),1)])),[[i,y(W)(`/debug/${o.variant}/data`,a)]])]))),256))]),(d(!0),m(R,null,$(y(l),a=>(d(),m("tr",{key:a.timestamp},[(d(!0),m(R,null,$(Object.keys(n[o.variant]),c=>(d(),m("td",null,[x((d(),m("span",null,[v(q(g(a,c)),1)])),[[i,b(a,c)]])]))),256))]))),128))],512)])):y(l)?(d(),m("div",X,[f(r,{color:"medium"},{default:I(()=>[Q]),_:1})])):j("",!0)}}});export{se as _,ne as a};
